{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PBPK Ontology (PBPKO)","text":"<p>The PBPK (Physiologically-Based Pharmacokinetic) ontology is designed to support the modeling and understanding of pharmacokinetics in biological systems. This documentation provides an overview of the ontology development workflow, the imported ontologies, and the specific terms used in PBPK ontology.</p> <p>Detailed Documentation</p> <p>Detailed documentation of ontology can be found at this link</p>"},{"location":"#development-workflow","title":"Development Workflow","text":"<p>The development of the PBPK ontology leverages the ROBOT (ROBOT is an OBO Tool) framework, which provides powerful tools for ontology development, including ontology merging, reasoning, and template-based term generation.</p>"},{"location":"#ontology-imports","title":"Ontology Imports","text":"<p>The PBPKO ontology imports several foundational ontologies to ensure interoperability and adherence to ontological best practices:</p> <ol> <li>Basic Formal Ontology (BFO) </li> <li>Relation Ontology (RO) </li> <li>Gene Ontology (GO) </li> <li>Ontology for Biomedical Investigations (OBI) </li> <li>Systems Biology Ontology </li> </ol>"},{"location":"#integration-with-bfo","title":"Integration with BFO","text":"graph TB     %% Legend     subgraph Legend         direction TB         class_legend((Class))         subclass_legend-.-&gt;class_legend         property_legend((Object Property))         property_legend--\"Object Property\"--&gt;class_legend     end      %% Ontology Imports (BFO, OBI, GO, SBO)     subgraph Imported_Ontologies[\"Imported Ontologies\"]         direction LR         subgraph BFO[\"BFO\"]             direction TB             BFO_0000002((BFO:entity))             BFO_0000020((BFO:continuant))             BFO_0000051---BFO_0000020(\"has_part\")             BFO_specifically_dependent((BFO:specifically dependent continuant))             BFO_occurrent((BFO:occurrent))             BFO_process((BFO:process))         end          subgraph OBI[\"OBI\"]             direction TB             OBI_0000658((OBI:data representation model))         end          subgraph GO[\"GO\"]             direction TB             GO_0008150((GO:biological process))             GO_0007588((GO:excretion))             GO_0008150---GO_0007588         end          subgraph SBO[\"SBO\"]             direction TB             SBO_0000027((SBO:Michaelis constant))         end          %% Links between imported ontologies         BFO_0000002---BFO_0000020         BFO_0000020---BFO_specifically_dependent         BFO_0000002---BFO_occurrent         BFO_occurrent---BFO_process         BFO_process---GO_0008150         BFO_specifically_dependent---OBI_0000658     end      %% PBPKO Main Classes     subgraph PBPKO[\"PBPK Ontology (PBPKO)\"]         direction TB         subgraph Core_Components             direction TB             PBPKO_00003((PBPKO:physiologically based pharmacokinetic model))             PBPKO_00446((PBPKO:compartment))             PBPKO_00217((PBPKO:transporter))             %% PBPKO_enzyme - derived from definitions/context             PBPKO_enzyme((PBPKO:enzyme))         end          subgraph Biological_Processes             direction TB             PBPKO_00140((PBPKO:absorption))             PBPKO_00146((PBPKO:distribution))             %% Corrected parent based on definition             PBPKO_00322((PBPKO:elimination))             PBPKO_00188((PBPKO:metabolism))             PBPKO_00238((PBPKO:biliary elimination))         end          subgraph Parameters             direction TB             PBPKO_00002((PBPKO:parameter))             PBPKO_00006((PBPKO:physiological parameter))             PBPKO_00126((PBPKO:physicochemical parameter))             PBPKO_00139((PBPKO:biochemical parameter))             PBPKO_00239((PBPKO:route of exposure))             PBPKO_00252((PBPKO:output parameter))         end          %% PBPKO Hierarchy         OBI_0000658---PBPKO_00003         OBI_0000658---PBPKO_00446         BFO_0000002---PBPKO_00217         BFO_0000002---PBPKO_enzyme          GO_0008150---PBPKO_00140         GO_0008150---PBPKO_00146         GO_0008150---PBPKO_00322         GO_0008150---PBPKO_00188         PBPKO_00322---GO_0007588         PBPKO_00322---PBPKO_00238          BFO_specifically_dependent---PBPKO_00002         PBPKO_00002---PBPKO_00006         PBPKO_00002---PBPKO_00126         PBPKO_00002---PBPKO_00139         PBPKO_00002---PBPKO_00239         PBPKO_00002---PBPKO_00252          PBPKO_00139---SBO_0000027          %% Example Subclasses         PBPKO_00006---PBPKO_vol((PBPKO:volume of compartment))         PBPKO_00006---PBPKO_bf((PBPKO:blood flow to compartment))         PBPKO_00139---PBPKO_pc((PBPKO:partition coefficient))         PBPKO_00139---PBPKO_uf((PBPKO:unbound fraction))         PBPKO_00126---PBPKO_mw((PBPKO:molecular weight))         PBPKO_00446---PBPKO_central((PBPKO:central compartment))         PBPKO_00446---PBPKO_peripheral((PBPKO:peripheral compartment))         PBPKO_00446---PBPKO_liver_cpt((PBPKO:liver compartment))         PBPKO_00446---PBPKO_kidney_cpt((PBPKO:kidney compartment))          PBPKO_00252---PBPKO_conc_cpt((PBPKO:concentration of compound in compartment))         PBPKO_00252---PBPKO_amount_cpt((PBPKO:amount of compound in compartment))          PBPKO_00252---PBPKO_peak_conc((PBPKO:peak concentration))         PBPKO_00252---PBPKO_auc((PBPKO:area under curve))     end      %% PBPKO Object Properties     PBPKO_00003--\"has_biological_process (PBPKO_10001)\"--&gt;PBPKO_00140     PBPKO_00003--\"has_biological_process (PBPKO_10001)\"--&gt;PBPKO_00146     PBPKO_00003--\"has_biological_process (PBPKO_10001)\"--&gt;PBPKO_00322     PBPKO_00003--\"has_biological_process (PBPKO_10001)\"--&gt;PBPKO_00188      PBPKO_00003--\"has_compartment (PBPKO_10002)\"--&gt;PBPKO_00446      PBPKO_00003--\"has_transporter (PBPKO_10004)\"--&gt;PBPKO_00217      %% Using the general has_parameter property     PBPKO_00003--\"has_parameter (PBPKO_10005)\"--&gt;PBPKO_00006     PBPKO_00003--\"has_parameter (PBPKO_10005)\"--&gt;PBPKO_00126     PBPKO_00003--\"has_parameter (PBPKO_10005)\"--&gt;PBPKO_00139     PBPKO_00003--\"has_parameter (PBPKO_10005)\"--&gt;PBPKO_00239     PBPKO_00003--\"has_parameter (PBPKO_10005)\"--&gt;PBPKO_00252      %% Example of object property subclass     PBPKO_10005---PBPKO_10008((PBPKO:has_physiological_parameter))     PBPKO_10008--\"has_physiological_parameter\"--&gt;PBPKO_00006      %% Link object properties to their domain     BFO_0000051((BFO:has_part))      %% Link PBPKO properties to their superproperty     BFO_0000051---PBPKO_10001     BFO_0000051---PBPKO_10002     BFO_0000051---PBPKO_10004     BFO_0000051---PBPKO_10005"},{"location":"#pbpk-terms-vocabulary","title":"PBPK Terms Vocabulary","text":"<p>PBPK terms are available in ROBOT template</p>"},{"location":"#quick-navigation","title":"Quick Navigation","text":"<ul> <li>About PBPKO - Learn more about the ontology</li> <li>Browse Ontology - Explore the ontology structure</li> <li>Download - Get the latest release</li> <li>Contribute - Help improve the ontology</li> </ul>"},{"location":"about/","title":"About PBPKO","text":""},{"location":"about/#overview","title":"Overview","text":"<p>The Physiologically-Based Pharmacokinetic Ontology (PBPKO) is a comprehensive ontology designed to support the modeling and understanding of pharmacokinetics in biological systems. PBPKO provides a standardized vocabulary and conceptual framework for describing physiologically-based pharmacokinetic (PBPK) models, their components, and the biological processes they represent.</p>"},{"location":"about/#purpose-and-scope","title":"Purpose and Scope","text":"<p>PBPKO aims to:</p> <ul> <li>Standardize terminology used in PBPK modeling across different research groups and software platforms</li> <li>Enable interoperability between different PBPK modeling tools and databases</li> <li>Support model annotation with semantic metadata for better reproducibility</li> <li>Facilitate knowledge discovery through structured representation of PBPK concepts</li> <li>Enable automated reasoning about PBPK model components and relationships</li> </ul>"},{"location":"about/#key-features","title":"Key Features","text":""},{"location":"about/#comprehensive-coverage","title":"Comprehensive Coverage","text":"<p>PBPKO covers the essential components of PBPK modeling:</p> <ul> <li>Core Model Classes: PBPK models, compartments, transporters, and enzymes</li> <li>Biological Processes: Absorption, distribution, metabolism, and elimination (ADME)</li> <li>Parameter Types: Physiological, physicochemical, and biochemical parameters</li> <li>Output Metrics: Concentration profiles, pharmacokinetic parameters, and evaluation metrics</li> </ul>"},{"location":"about/#ontological-foundation","title":"Ontological Foundation","text":"<p>PBPKO is built on solid ontological foundations by importing:</p> <ul> <li>Basic Formal Ontology (BFO) for upper-level categories</li> <li>Relation Ontology (RO) for standard relationships</li> <li>Gene Ontology (GO) for biological processes</li> <li>Ontology for Biomedical Investigations (OBI) for investigation-related terms</li> <li>Systems Biology Ontology (SBO) for biochemical parameters</li> </ul>"},{"location":"about/#robot-based-development","title":"ROBOT-Based Development","text":"<p>The ontology is developed using ROBOT (ROBOT is an OBO Tool) framework, which provides:</p> <ul> <li>Template-based term generation</li> <li>Automated reasoning and validation</li> <li>Consistent annotation patterns</li> <li>Integration with OBO Foundry standards</li> </ul>"},{"location":"about/#target-users","title":"Target Users","text":"<p>PBPKO is designed for:</p> <ul> <li>PBPK Modelers: Researchers developing and using PBPK models</li> <li>Software Developers: Building PBPK modeling tools and platforms</li> <li>Database Curators: Managing PBPK model repositories</li> <li>Regulatory Scientists: Evaluating PBPK models for regulatory submissions</li> <li>Ontologists: Extending and maintaining the ontology</li> </ul>"},{"location":"about/#applications","title":"Applications","text":"<p>PBPKO can be used for:</p> <ul> <li>Model Annotation: Adding semantic metadata to PBPK models</li> <li>Tool Integration: Enabling interoperability between modeling platforms</li> <li>Knowledge Discovery: Finding related models and parameters</li> <li>Quality Assurance: Validating model completeness and consistency</li> <li>Education: Teaching PBPK concepts through structured vocabulary</li> </ul>"},{"location":"about/#development-status","title":"Development Status","text":"<p>PBPKO is actively developed and maintained by a collaborative team from:</p> <ul> <li>IISPV (Institut d'Investigaci\u00f3 Sanit\u00e0ria Pere Virgili)</li> <li>WUR (Wageningen University &amp; Research)</li> <li>JSI (Jo\u017eef Stefan Institute)</li> </ul> <p>The ontology follows OBO Foundry principles and is designed for long-term sustainability and community adoption.</p>"},{"location":"acknowledgements/","title":"Acknowledgements","text":""},{"location":"acknowledgements/#core-development-team","title":"Core Development Team","text":"<ul> <li>IISPV (Institut d'Investigaci\u00f3 Sanit\u00e0ria Pere Virgili)</li> <li>WUR (Wageningen University &amp; Research)</li> <li>JSI (Jo\u017eef Stefan Institute)</li> </ul>"},{"location":"acknowledgements/#community-contributors","title":"Community Contributors","text":""},{"location":"acknowledgements/#early-adopters-and-testers","title":"Early Adopters and Testers","text":"<p>Research Groups: - Multiple PBPK modeling research groups who provided early feedback - Academic institutions that tested early versions - Industry partners who validated practical applications</p> <p>Individual Contributors: - GitHub users who reported issues and suggested improvements - Conference attendees who provided feedback - Workshop participants who tested tutorials</p>"},{"location":"acknowledgements/#advisory-board","title":"Advisory Board","text":"<p>Domain Experts: - PBPK modeling experts who provided guidance - Ontology experts who reviewed design decisions - Regulatory experts who provided compliance guidance</p>"},{"location":"acknowledgements/#institutional-support","title":"Institutional Support","text":""},{"location":"acknowledgements/#primary-institutions","title":"Primary Institutions","text":"<p>IISPV - Institut d'Investigaci\u00f3 Sanit\u00e0ria Pere Virgili - Primary development institution - Infrastructure support - Administrative support - Funding support</p> <p>WUR - Wageningen University &amp; Research - Collaboration support - Domain expertise - Validation resources - Academic partnership</p> <p>JSI - Jo\u017eef Stefan Institute - Technical expertise - Validation support - Testing infrastructure - Research collaboration</p>"},{"location":"acknowledgements/#supporting-organizations","title":"Supporting Organizations","text":"<p>OBO Foundry Community - Ontology development best practices - Technical guidance - Community standards - Tool development</p> <p>ROBOT Development Team - ROBOT tool development and maintenance - Technical support - Documentation - Community engagement</p>"},{"location":"acknowledgements/#technical-acknowledgments","title":"Technical Acknowledgments","text":"<p>Prot\u00e9g\u00e9 - Ontology editor - Used for manual ontology editing - Validation and reasoning capabilities - User-friendly interface - Active development community</p> <p>GitHub - Version control and collaboration platform - Repository hosting - Issue tracking - Collaboration tools - Community features</p>"},{"location":"acknowledgements/#foundational-ontologies","title":"Foundational Ontologies","text":"<p>BFO - Basic Formal Ontology - Upper-level ontology framework - Philosophical foundation - Consistent terminology - Community standards</p> <p>RO - Relation Ontology - Standard relationship definitions - Consistent property usage - Community adoption - Regular updates</p> <p>GO - Gene Ontology - Biological process definitions - Community standards - Extensive coverage - Regular updates</p> <p>OBI - Ontology for Biomedical Investigations - Investigation-related terms - Comprehensive coverage - Community standards - Regular updates</p> <p>SBO - Systems Biology Ontology - Biochemical parameter definitions - Systems biology focus - Community standards - Regular updates</p>"},{"location":"acknowledgements/#funding-acknowledgments","title":"Funding Acknowledgments","text":"Organization Type Description Link Partnership for the Assessment of Risks from Chemicals (PARC) European partnership (Horizon Europe) Supports next-generation chemical risk assessment aligned with the EU Chemicals Strategy for Sustainability and the European Green Deal\u2019s \u201cZero pollution\u201d ambition; collaboration across ~200 institutions coordinated by ANSES. https://www.eu-parc.eu/"},{"location":"acknowledgements/#community-acknowledgments","title":"Community Acknowledgments","text":""},{"location":"acknowledgements/#user-community","title":"User Community","text":"<p>Early Users: - Researchers who adopted early versions - Students who used PBPKO in their work - Industry professionals who provided feedback - Regulatory scientists who validated applications</p> <p>Feedback Providers: - GitHub issue reporters - Conference question askers - Workshop participants - Email correspondents</p>"},{"location":"acknowledgements/#professional-community","title":"Professional Community","text":"<p>Conference Organizers: - OBO Foundry Workshop organizers - PBPK modeling conference organizers - Bioinformatics conference organizers - Ontology conference organizers</p> <p>Journal Editors and Reviewers: - Peer reviewers who provided constructive feedback - Editors who supported publication - Conference reviewers who provided guidance - Workshop organizers who provided opportunities</p>"},{"location":"acknowledgements/#special-thanks","title":"Special Thanks","text":""},{"location":"acknowledgements/#mentors-and-advisors","title":"Mentors and Advisors","text":"<p>Academic Mentors: - PhD supervisors who supported the work - Postdoctoral advisors who provided guidance - Senior researchers who shared expertise - Industry mentors who provided perspective</p> <p>Community Leaders: - OBO Foundry community leaders - PBPK modeling community leaders - Ontology development community leaders - Open source community leaders</p>"},{"location":"acknowledgements/#family-and-personal-support","title":"Family and Personal Support","text":"<p>Personal Acknowledgments: - Family members who supported the work - Friends who provided encouragement - Colleagues who offered support - Community members who provided motivation</p>"},{"location":"acknowledgements/#future-acknowledgments","title":"Future Acknowledgments","text":""},{"location":"acknowledgements/#planned-recognition","title":"Planned Recognition","text":"<p>Contributor Recognition: - GitHub contributor recognition - Publication acknowledgments - Conference acknowledgments - Community recognition</p> <p>Institutional Recognition: - Partner institution acknowledgments - Supporting organization recognition - Community organization acknowledgments - Professional society recognition</p>"},{"location":"acknowledgements/#how-to-contribute","title":"How to Contribute","text":""},{"location":"acknowledgements/#ways-to-contribute","title":"Ways to Contribute","text":"<p>Technical Contributions: - Code contributions - Documentation improvements - Bug reports - Feature requests</p> <p>Community Contributions: - User feedback - Tutorial development - Workshop organization - Conference presentations</p> <p>Institutional Contributions: - Research partnerships - Funding support - Infrastructure support - Administrative support</p>"},{"location":"acknowledgements/#recognition-process","title":"Recognition Process","text":"<p>Contributor Recognition: - GitHub contributor list - Publication acknowledgments - Conference acknowledgments - Community recognition</p> <p>Institutional Recognition: - Partner acknowledgments - Funding acknowledgments - Infrastructure acknowledgments - Administrative acknowledgments</p> <p>For questions about acknowledgments or to report missing acknowledgments, please contact the maintainers or open a GitHub issue.</p>"},{"location":"build_process/","title":"Build Process","text":"<p>This page describes the build process for PBPKO, including how to generate the ontology from templates and manage releases.</p>"},{"location":"build_process/#overview","title":"Overview","text":"<p>The PBPKO build process uses ROBOT to: 1. Generate ontology from TSV templates 2. Merge with imported ontologies 3. Validate the resulting ontology 4. Generate release files</p>"},{"location":"build_process/#build-steps","title":"Build Steps","text":""},{"location":"build_process/#1-template-processing","title":"1. Template Processing","text":"<p>Generate edit.owl from templates: <pre><code>robot template --template Robot/templates/vocab.tsv \\\n               --template Robot/templates/properties.tsv \\\n               --output Robot/ontologies/edit.owl\n</code></pre></p>"},{"location":"build_process/#2-import-management","title":"2. Import Management","text":"<p>Update imported modules: <pre><code>robot extract --input Robot/ontologies/imported_modules.owl \\\n              --term-file Robot/extracted_terms/imported_modules/go_terms.txt \\\n              --output Robot/ontologies/go_module.owl\n</code></pre></p>"},{"location":"build_process/#3-ontology-merging","title":"3. Ontology Merging","text":"<p>Merge edit.owl with imports: <pre><code>robot merge --input Robot/ontologies/edit.owl \\\n           --input Robot/ontologies/imported_modules.owl \\\n           --output Robot/ontologies/pbpko.owl\n</code></pre></p>"},{"location":"build_process/#4-validation","title":"4. Validation","text":"<p>Validate the ontology: <pre><code>robot validate --input Robot/ontologies/pbpko.owl\n</code></pre></p> <p>Check for errors: <pre><code>robot report --input Robot/ontologies/pbpko.owl \\\n             --output reports/pbpko-report.html\n</code></pre></p>"},{"location":"build_process/#build-scripts","title":"Build Scripts","text":""},{"location":"build_process/#complete-build","title":"Complete Build","text":"<p>Run full build process: <pre><code>./scripts/build.sh\n</code></pre></p> <p>Windows: <pre><code>scripts\\build.bat\n</code></pre></p>"},{"location":"build_process/#individual-steps","title":"Individual Steps","text":"<p>Template only: <pre><code>./scripts/template.sh\n</code></pre></p> <p>Merge only: <pre><code>./scripts/merge.sh\n</code></pre></p> <p>Validate only: <pre><code>./scripts/validate.sh\n</code></pre></p>"},{"location":"build_process/#build-configuration","title":"Build Configuration","text":""},{"location":"build_process/#robot-configuration","title":"ROBOT Configuration","text":"<p>robot-config.yaml: <pre><code>build:\n  inputs:\n    - edit.owl\n    - imported_modules.owl\n  outputs:\n    - pbpko.owl\n  reports:\n    - pbpko-report.html\n</code></pre></p>"},{"location":"build_process/#template-configuration","title":"Template Configuration","text":"<p>Template settings in TSV files: - Column headers must match ROBOT expectations - IDs must follow PBPKO format - Required columns must be filled</p>"},{"location":"build_process/#release-process","title":"Release Process","text":""},{"location":"build_process/#1-pre-release-checks","title":"1. Pre-release Checks","text":"<ul> <li>[ ] All templates validated</li> <li>[ ] Imports updated</li> <li>[ ] Tests passing</li> <li>[ ] Documentation updated</li> </ul>"},{"location":"build_process/#2-version-management","title":"2. Version Management","text":"<p>Update version in: - <code>Robot/ontologies/catalog-v001.xml</code> - Release notes - Documentation</p>"},{"location":"build_process/#3-release-generation","title":"3. Release Generation","text":"<p>Generate release files: <pre><code>robot convert --input Robot/ontologies/pbpko.owl \\\n              --format owl \\\n              --output releases/pbpko.owl\n</code></pre></p> <p>Generate different formats: <pre><code># OBO format\nrobot convert --input Robot/ontologies/pbpko.owl \\\n              --format obo \\\n              --output releases/pbpko.obo\n\n# JSON-LD format\nrobot convert --input Robot/ontologies/pbpko.owl \\\n              --format json \\\n              --output releases/pbpko.json\n</code></pre></p>"},{"location":"build_process/#continuous-integration","title":"Continuous Integration","text":""},{"location":"build_process/#github-actions","title":"GitHub Actions","text":"<p>Build on every push: <pre><code>name: Build PBPKO\non: [push, pull_request]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup ROBOT\n        run: |\n          wget https://github.com/ontodev/robot/releases/download/v1.8.1/robot.jar\n      - name: Build ontology\n        run: ./scripts/build.sh\n</code></pre></p>"},{"location":"build_process/#automated-testing","title":"Automated Testing","text":"<p>Run tests: <pre><code>robot test --input Robot/ontologies/pbpko.owl \\\n           --test all\n</code></pre></p>"},{"location":"build_process/#troubleshooting","title":"Troubleshooting","text":""},{"location":"build_process/#common-build-errors","title":"Common Build Errors","text":"<p>Template errors: - Check TSV format - Verify column headers - Ensure required fields are filled</p> <p>Import errors: - Verify import URLs - Check network connectivity - Update import versions</p> <p>Merge conflicts: - Resolve duplicate terms - Check logical consistency - Validate relationships</p>"},{"location":"build_process/#debug-mode","title":"Debug Mode","text":"<p>Enable verbose output: <pre><code>robot --verbose template --template Robot/templates/vocab.tsv\n</code></pre></p> <p>Check intermediate files: <pre><code>ls -la Robot/ontologies/\n</code></pre></p>"},{"location":"build_process/#performance-optimization","title":"Performance Optimization","text":""},{"location":"build_process/#build-speed","title":"Build Speed","text":"<ul> <li>Use incremental builds when possible</li> <li>Cache imported ontologies</li> <li>Parallel processing for large templates</li> </ul>"},{"location":"build_process/#memory-usage","title":"Memory Usage","text":"<ul> <li>Process templates in batches</li> <li>Use streaming for large files</li> <li>Monitor memory usage</li> </ul>"},{"location":"build_process/#best-practices","title":"Best Practices","text":""},{"location":"build_process/#version-control","title":"Version Control","text":"<ul> <li>Commit templates separately from generated files</li> <li>Use meaningful commit messages</li> <li>Tag releases appropriately</li> </ul>"},{"location":"build_process/#documentation","title":"Documentation","text":"<ul> <li>Document build process changes</li> <li>Update scripts when needed</li> <li>Maintain build logs</li> </ul>"},{"location":"build_process/#testing","title":"Testing","text":"<ul> <li>Test builds on different systems</li> <li>Validate outputs thoroughly</li> <li>Check for regressions</li> </ul>"},{"location":"build_process/#resources","title":"Resources","text":"<ul> <li>ROBOT Documentation</li> <li>OBO Build Tools</li> <li>PBPKO Build Scripts</li> </ul>"},{"location":"cite/","title":"Cite","text":""},{"location":"cite/#how-to-cite-pbpko","title":"How to Cite PBPKO","text":"<p>If you use PBPKO in your research, please cite it appropriately. This helps us track usage and maintain the project.</p>"},{"location":"cite/#citation-formats","title":"Citation Formats","text":""},{"location":"cite/#software-citation","title":"Software Citation","text":"<p>APA Style: <pre><code>Kumar, S., Sharma, S., Deepika, D., Kumar, V., Kruisselbrink, J., &amp; Panov, P. (2025). \nPBPK Ontology (PBPKO). Version 1.0.3. \nhttps://github.com/InSilicoVida-Research-Lab/pbpko\n</code></pre></p> <p>MLA Style: <pre><code>Kumar, Saurav, et al. PBPK Ontology (PBPKO). Version 1.0.3, \nInSilicoVida Research Lab, 2025, \nhttps://github.com/InSilicoVida-Research-Lab/pbpko.\n</code></pre></p> <p>Chicago Style: <pre><code>Kumar, Saurav, Shubh Sharma, Deepika Deepika, Vikas Kumar, Johannes Kruisselbrink, and Pan\u010de Panov. \nPBPK Ontology (PBPKO). Version 1.0.3. 2025. \nhttps://github.com/InSilicoVida-Research-Lab/pbpko.\n</code></pre></p>"},{"location":"cite/#bibtex-entry","title":"BibTeX Entry","text":"<pre><code>@software{pbpko2025,\n  title={PBPK Ontology (PBPKO)},\n  author={Kumar, Saurav and Sharma, Shubh and Deepika, Deepika and Kumar, Vikas and Kruisselbrink, Johannes and Panov, Pan\u010de},\n  year={2025},\n  version={1.0.3},\n  url={https://github.com/InSilicoVida-Research-Lab/pbpko},\n  note={A comprehensive ontology for physiologically-based pharmacokinetic modeling}\n}\n</code></pre>"},{"location":"cite/#ris-format","title":"RIS Format","text":"<pre><code>TY  - COMP\nTI  - PBPK Ontology (PBPKO)\nAU  - Kumar, Saurav\nAU  - Sharma, Shubh\nAU  - Deepika, Deepika\nAU  - Kumar, Vikas\nAU  - Kruisselbrink, Johannes\nAU  - Panov, Pan\u010de\nPY  - 2025\nVL  - 1.0.3\nUR  - https://github.com/InSilicoVida-Research-Lab/pbpko\nAB  - A comprehensive ontology for physiologically-based pharmacokinetic modeling\nER  -\n</code></pre>"},{"location":"cite/#doi-information","title":"DOI Information","text":""},{"location":"cite/#software-doi","title":"Software DOI","text":"<ul> <li>DOI: 10.5281/zenodo.XXXXXXX</li> <li>Repository: Zenodo</li> <li>Type: Software release</li> </ul>"},{"location":"cite/#documentation-doi","title":"Documentation DOI","text":"<ul> <li>DOI: 10.5281/zenodo.XXXXXXX</li> <li>Repository: Zenodo</li> <li>Type: Documentation release</li> </ul>"},{"location":"cite/#publication-citation","title":"Publication Citation","text":""},{"location":"cite/#when-citing-the-ontology-paper","title":"When Citing the Ontology Paper","text":"<p>In Preparation: <pre><code>Kumar, S., Sharma, S., Deepika, D., Kumar, V., Kruisselbrink, J., &amp; Panov, P. (2025). \nPBPK Ontology (PBPKO): A comprehensive ontology for physiologically-based pharmacokinetic modeling. \n[Journal Name]. [DOI: TBD]\n</code></pre></p> <p>BibTeX: <pre><code>@article{pbpko_paper2025,\n  title={PBPK Ontology (PBPKO): A comprehensive ontology for physiologically-based pharmacokinetic modeling},\n  author={Kumar, Saurav and Sharma, Shubh and Deepika, Deepika and Kumar, Vikas and Kruisselbrink, Johannes and Panov, Pan\u010de},\n  journal={[Journal Name]},\n  year={2025},\n  publisher={[Publisher]},\n  doi={[DOI]}\n}\n</code></pre></p>"},{"location":"cite/#usage-guidelines","title":"Usage Guidelines","text":""},{"location":"cite/#when-to-cite","title":"When to Cite","text":"<p>Cite PBPKO when you: - Use PBPKO terms in your research - Build upon PBPKO concepts - Compare your work with PBPKO - Use PBPKO for model annotation - Reference PBPKO methodology</p>"},{"location":"cite/#what-to-include","title":"What to Include","text":"<p>Include in your citation: - Full author list - Current version number - Publication year - Repository URL - DOI (when available)</p>"},{"location":"cite/#version-information","title":"Version Information","text":"<p>Always cite the specific version you used: - Check the version number in your downloaded files - Use the exact version number (e.g., 1.0.3) - Update citations when you update to new versions</p>"},{"location":"cite/#citation-examples","title":"Citation Examples","text":""},{"location":"cite/#in-text-citations","title":"In Text Citations","text":"<p>APA Style: <pre><code>The PBPK model was annotated using the PBPK Ontology (Kumar et al., 2025).\n</code></pre></p> <p>MLA Style: <pre><code>The PBPK model was annotated using the PBPK Ontology (Kumar et al.).\n</code></pre></p> <p>Chicago Style: <pre><code>The PBPK model was annotated using the PBPK Ontology.\u00b9\n</code></pre></p>"},{"location":"cite/#reference-list-entries","title":"Reference List Entries","text":"<p>APA Style: <pre><code>Kumar, S., Sharma, S., Deepika, D., Kumar, V., Kruisselbrink, J., &amp; Panov, P. (2025). \nPBPK Ontology (PBPKO). Version 1.0.3. \nhttps://github.com/InSilicoVida-Research-Lab/pbpko\n</code></pre></p> <p>MLA Style: <pre><code>Kumar, Saurav, et al. PBPK Ontology (PBPKO). Version 1.0.3, \nInSilicoVida Research Lab, 2025, \nhttps://github.com/InSilicoVida-Research-Lab/pbpko.\n</code></pre></p>"},{"location":"cite/#citation-tracking","title":"Citation Tracking","text":""},{"location":"cite/#why-citations-matter","title":"Why Citations Matter","text":"<p>Citations help us: - Track usage and impact - Secure funding for continued development - Demonstrate community value - Plan future development - Maintain the project</p>"},{"location":"cite/#how-we-track-citations","title":"How We Track Citations","text":"<p>We monitor: - Google Scholar citations - PubMed citations - Conference proceedings - GitHub repository stars - Download statistics</p>"},{"location":"cite/#reporting-citations","title":"Reporting Citations","text":"<p>If you cite PBPKO: - Let us know about your publication - Share your research results - Consider collaboration opportunities - Provide feedback on usage</p>"},{"location":"cite/#contact-information","title":"Contact Information","text":""},{"location":"cite/#citation-questions","title":"Citation Questions","text":"<p>For citation-related questions: - Email: saurav.kumar@iispv.cat - GitHub: Open an issue - Discussion: Use GitHub discussions</p>"},{"location":"cite/#collaboration-opportunities","title":"Collaboration Opportunities","text":"<p>We welcome: - Research collaborations - Co-authorship opportunities - Conference presentations - Workshop organization</p>"},{"location":"cite/#acknowledgments","title":"Acknowledgments","text":""},{"location":"cite/#citation-acknowledgments","title":"Citation Acknowledgments","text":"<p>We acknowledge: - All researchers who cite PBPKO - Users who provide feedback - Community members who promote the work - Institutions that support the project</p>"},{"location":"cite/#future-recognition","title":"Future Recognition","text":"<p>Planned recognition: - Citation impact tracking - User success stories - Community highlights - Annual reports</p>"},{"location":"cite/#resources","title":"Resources","text":""},{"location":"cite/#citation-tools","title":"Citation Tools","text":"<p>Reference Management: - Zotero - Free reference manager - Mendeley - Reference manager and social network - EndNote - Commercial reference manager - BibTeX - LaTeX bibliography tool</p>"},{"location":"cite/#citation-styles","title":"Citation Styles","text":"<p>Style Guides: - APA Style - American Psychological Association - MLA Style - Modern Language Association - Chicago Style - Chicago Manual of Style - IEEE Style - Institute of Electrical and Electronics Engineers</p>"},{"location":"cite/#citation-generators","title":"Citation Generators","text":"<p>Online Tools: - Citation Machine - Online citation generator - EasyBib - Citation generator - BibMe - Bibliography maker - Cite This For Me - Citation generator</p> <p>Thank you for citing PBPKO and supporting our work!</p>"},{"location":"continuous_integration/","title":"Continuous Integration","text":"<p>This page describes the continuous integration (CI) setup for PBPKO, including automated testing, validation, and deployment processes.</p>"},{"location":"continuous_integration/#overview","title":"Overview","text":"<p>PBPKO uses GitHub Actions for continuous integration to ensure: - Automated testing on every commit - Ontology validation - Documentation deployment - Release automation</p>"},{"location":"continuous_integration/#ci-workflows","title":"CI Workflows","text":""},{"location":"continuous_integration/#1-build-and-test-workflow","title":"1. Build and Test Workflow","text":"<p>File: <code>.github/workflows/build.yml</code></p> <p>Triggers: - Push to main branch - Pull requests - Manual trigger</p> <p>Steps: 1. Checkout code 2. Setup Java (for ROBOT) 3. Download ROBOT 4. Run ontology build 5. Validate ontology 6. Run tests 7. Generate reports</p> <p>Example: <pre><code>name: Build and Test\non: [push, pull_request]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Java\n        uses: actions/setup-java@v2\n        with:\n          java-version: '11'\n      - name: Download ROBOT\n        run: wget https://github.com/ontodev/robot/releases/download/v1.8.1/robot.jar\n      - name: Build ontology\n        run: ./scripts/build.sh\n      - name: Validate ontology\n        run: robot validate --input Robot/ontologies/pbpko.owl\n</code></pre></p>"},{"location":"continuous_integration/#2-documentation-deployment","title":"2. Documentation Deployment","text":"<p>File: <code>.github/workflows/docs.yml</code></p> <p>Triggers: - Push to main branch - Manual trigger</p> <p>Steps: 1. Checkout code 2. Setup Python 3. Install MkDocs 4. Build documentation 5. Deploy to GitHub Pages</p> <p>Example: <pre><code>name: Deploy Documentation\non:\n  push:\n    branches: [ main ]\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - name: Install dependencies\n        run: pip install mkdocs mkdocs-material\n      - name: Deploy\n        run: mkdocs gh-deploy --force\n</code></pre></p>"},{"location":"continuous_integration/#3-release-workflow","title":"3. Release Workflow","text":"<p>File: <code>.github/workflows/release.yml</code></p> <p>Triggers: - Tag creation - Manual trigger</p> <p>Steps: 1. Checkout code 2. Setup Java 3. Download ROBOT 4. Build ontology 5. Generate release files 6. Create GitHub release</p> <p>Example: <pre><code>name: Release\non:\n  push:\n    tags: ['v*']\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Java\n        uses: actions/setup-java@v2\n        with:\n          java-version: '11'\n      - name: Download ROBOT\n        run: wget https://github.com/ontodev/robot/releases/download/v1.8.1/robot.jar\n      - name: Build ontology\n        run: ./scripts/build.sh\n      - name: Create release\n        uses: actions/create-release@v1\n        with:\n          tag_name: ${{ github.ref }}\n          release_name: Release ${{ github.ref }}\n          draft: false\n          prerelease: false\n</code></pre></p>"},{"location":"continuous_integration/#automated-testing","title":"Automated Testing","text":""},{"location":"continuous_integration/#ontology-validation","title":"Ontology Validation","text":"<p>ROBOT Validation: <pre><code>robot validate --input Robot/ontologies/pbpko.owl\n</code></pre></p> <p>Checks performed: - OWL syntax validation - Logical consistency - Property restrictions - Class hierarchy validation</p>"},{"location":"continuous_integration/#template-validation","title":"Template Validation","text":"<p>Template Checking: <pre><code>robot template --template Robot/templates/vocab.tsv --check\n</code></pre></p> <p>Checks performed: - TSV format validation - Required column validation - ID uniqueness - Reference validation</p>"},{"location":"continuous_integration/#build-testing","title":"Build Testing","text":"<p>Complete Build Test: <pre><code>./scripts/build.sh\n</code></pre></p> <p>Tests performed: - Template processing - Import merging - Ontology generation - Output validation</p>"},{"location":"continuous_integration/#quality-assurance","title":"Quality Assurance","text":""},{"location":"continuous_integration/#code-quality","title":"Code Quality","text":"<p>Automated Checks: - Syntax validation - Format checking - Linting - Security scanning</p>"},{"location":"continuous_integration/#documentation-quality","title":"Documentation Quality","text":"<p>Documentation Checks: - Link validation - Markdown syntax - Image optimization - Accessibility testing</p>"},{"location":"continuous_integration/#performance-testing","title":"Performance Testing","text":"<p>Performance Checks: - Build time monitoring - Memory usage tracking - Output size validation - Processing speed testing</p>"},{"location":"continuous_integration/#deployment-automation","title":"Deployment Automation","text":""},{"location":"continuous_integration/#github-pages-deployment","title":"GitHub Pages Deployment","text":"<p>Automatic deployment: - Triggers on main branch push - Builds MkDocs site - Deploys to GitHub Pages - Updates live documentation</p>"},{"location":"continuous_integration/#release-automation","title":"Release Automation","text":"<p>Release process: - Tag-based triggering - Automated build - Release file generation - GitHub release creation</p>"},{"location":"continuous_integration/#monitoring-and-alerts","title":"Monitoring and Alerts","text":""},{"location":"continuous_integration/#build-status","title":"Build Status","text":"<p>Status Monitoring: - GitHub Actions status badges - Build success/failure notifications - Performance metrics tracking - Error reporting</p>"},{"location":"continuous_integration/#notification-system","title":"Notification System","text":"<p>Alerts: - Email notifications for failures - Slack integration for team updates - GitHub issue creation for errors - Status page updates</p>"},{"location":"continuous_integration/#configuration-management","title":"Configuration Management","text":""},{"location":"continuous_integration/#environment-variables","title":"Environment Variables","text":"<p>Secrets Management: - GitHub secrets for sensitive data - Environment-specific configurations - API key management - Access token handling</p>"},{"location":"continuous_integration/#build-configuration","title":"Build Configuration","text":"<p>Configuration Files: - <code>mkdocs.yml</code> - Documentation configuration - <code>robot-config.yaml</code> - ROBOT configuration - <code>.github/workflows/</code> - CI workflow definitions - <code>scripts/</code> - Build script configurations</p>"},{"location":"continuous_integration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"continuous_integration/#common-issues","title":"Common Issues","text":"<p>Build Failures: - Check ROBOT version compatibility - Verify template format - Validate import URLs - Check Java version</p> <p>Deployment Issues: - Verify GitHub Pages settings - Check repository permissions - Validate MkDocs configuration - Review deployment logs</p>"},{"location":"continuous_integration/#debug-mode","title":"Debug Mode","text":"<p>Enable Debug Output: <pre><code>- name: Debug build\n  run: |\n    echo \"Debug information\"\n    ls -la Robot/ontologies/\n    robot --verbose validate --input Robot/ontologies/pbpko.owl\n</code></pre></p>"},{"location":"continuous_integration/#best-practices","title":"Best Practices","text":""},{"location":"continuous_integration/#workflow-design","title":"Workflow Design","text":"<p>Design Principles: - Keep workflows simple and focused - Use reusable workflow components - Implement proper error handling - Include comprehensive logging</p>"},{"location":"continuous_integration/#security","title":"Security","text":"<p>Security Measures: - Use GitHub secrets for sensitive data - Implement proper access controls - Regular security updates - Vulnerability scanning</p>"},{"location":"continuous_integration/#performance","title":"Performance","text":"<p>Performance Optimization: - Use caching for dependencies - Parallel job execution - Optimize build scripts - Monitor resource usage</p>"},{"location":"continuous_integration/#maintenance","title":"Maintenance","text":""},{"location":"continuous_integration/#regular-updates","title":"Regular Updates","text":"<p>Update Schedule: - Monthly dependency updates - Quarterly workflow reviews - Annual security audits - Continuous monitoring</p>"},{"location":"continuous_integration/#monitoring","title":"Monitoring","text":"<p>Monitoring Tasks: - Build success rates - Performance metrics - Error frequency - Resource usage</p>"},{"location":"continuous_integration/#resources","title":"Resources","text":""},{"location":"continuous_integration/#documentation","title":"Documentation","text":"<ul> <li>GitHub Actions Documentation</li> <li>ROBOT Documentation</li> <li>MkDocs Documentation</li> </ul>"},{"location":"continuous_integration/#tools","title":"Tools","text":"<ul> <li>GitHub Actions</li> <li>ROBOT</li> <li>MkDocs</li> </ul>"},{"location":"continuous_integration/#examples","title":"Examples","text":"<ul> <li>PBPKO Workflows</li> <li>Build Scripts</li> <li>Configuration Files</li> </ul>"},{"location":"contributing/","title":"How to contribute to PBPKO","text":"<p>We welcome contributions to the PBPK Ontology (PBPKO)! This guide will help you get started with contributing to the ontology development.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":""},{"location":"contributing/#prerequisites","title":"Prerequisites","text":"<p>Before contributing to PBPKO, you should have:</p> <ul> <li>Basic understanding of ontologies and OWL</li> <li>Familiarity with PBPK modeling concepts</li> <li>Git and GitHub knowledge</li> <li>ROBOT tool experience (recommended)</li> </ul>"},{"location":"contributing/#repository-setup","title":"Repository Setup","text":"<ol> <li> <p>Fork the repository <pre><code># Fork https://github.com/InSilicoVida-Research-Lab/pbpko on GitHub\n</code></pre></p> </li> <li> <p>Clone your fork <pre><code>git clone https://github.com/YOUR_USERNAME/pbpko.git\ncd pbpko\n</code></pre></p> </li> <li> <p>Add upstream remote <pre><code>git remote add upstream https://github.com/InSilicoVida-Research-Lab/pbpko.git\n</code></pre></p> </li> </ol>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#1-adding-new-terms","title":"1. Adding New Terms","text":"<p>To add new terms to PBPKO:</p> <ol> <li>Identify the need - Check if the term already exists</li> <li>Use ROBOT templates - Add terms using the TSV templates in <code>Robot/templates/</code></li> <li>Follow naming conventions - Use consistent naming patterns</li> <li>Provide definitions - Include clear, concise definitions</li> <li>Add references - Cite relevant literature</li> </ol>"},{"location":"contributing/#2-improving-existing-terms","title":"2. Improving Existing Terms","text":"<p>You can improve existing terms by:</p> <ul> <li>Adding better definitions</li> <li>Including synonyms</li> <li>Adding references</li> <li>Improving relationships</li> <li>Adding examples</li> </ul>"},{"location":"contributing/#3-documentation-improvements","title":"3. Documentation Improvements","text":"<p>Help improve the documentation by:</p> <ul> <li>Fixing typos and errors</li> <li>Adding examples</li> <li>Improving clarity</li> <li>Adding missing information</li> </ul>"},{"location":"contributing/#4-bug-reports","title":"4. Bug Reports","text":"<p>Report issues by:</p> <ul> <li>Creating GitHub issues</li> <li>Providing detailed descriptions</li> <li>Including examples when possible</li> <li>Suggesting solutions if you have them</li> </ul>"},{"location":"contributing/#contribution-workflow","title":"Contribution Workflow","text":""},{"location":"contributing/#1-create-a-branch","title":"1. Create a Branch","text":"<pre><code>git checkout -b feature/your-feature-name\n</code></pre>"},{"location":"contributing/#2-make-changes","title":"2. Make Changes","text":"<ul> <li>Edit the appropriate files</li> <li>Follow the coding standards</li> <li>Test your changes</li> </ul>"},{"location":"contributing/#3-commit-changes","title":"3. Commit Changes","text":"<pre><code>git add .\ngit commit -m \"Add: brief description of changes\"\n</code></pre>"},{"location":"contributing/#4-push-and-create-pull-request","title":"4. Push and Create Pull Request","text":"<pre><code>git push origin feature/your-feature-name\n</code></pre> <p>Then create a pull request on GitHub.</p>"},{"location":"contributing/#robot-templates","title":"ROBOT Templates","text":"<p>PBPKO uses ROBOT templates for term management. See ROBOT Templates for detailed information.</p>"},{"location":"contributing/#template-files","title":"Template Files","text":"<ul> <li><code>vocab.tsv</code> - Main vocabulary terms</li> <li><code>properties.tsv</code> - Object and data properties</li> <li><code>input.tsv</code> - Additional input data</li> </ul>"},{"location":"contributing/#coding-standards","title":"Coding Standards","text":""},{"location":"contributing/#term-ids","title":"Term IDs","text":"<ul> <li>Use format: <code>PBPKO:XXXXX</code></li> <li>Sequential numbering</li> <li>No gaps in numbering</li> </ul>"},{"location":"contributing/#labels","title":"Labels","text":"<ul> <li>Use title case</li> <li>Be descriptive and concise</li> <li>Avoid abbreviations when possible</li> </ul>"},{"location":"contributing/#definitions","title":"Definitions","text":"<ul> <li>Start with capital letter</li> <li>End with period</li> <li>Be clear and unambiguous</li> <li>Include context when helpful</li> </ul>"},{"location":"contributing/#synonyms","title":"Synonyms","text":"<ul> <li>Include common abbreviations</li> <li>Include alternative spellings</li> <li>Use pipe (|) to separate multiple synonyms</li> </ul>"},{"location":"contributing/#review-process","title":"Review Process","text":"<p>All contributions go through a review process:</p> <ol> <li>Automated checks - ROBOT validation</li> <li>Peer review - Team members review changes</li> <li>Testing - Verify changes work correctly</li> <li>Approval - Maintainer approval required</li> </ol>"},{"location":"contributing/#getting-help","title":"Getting Help","text":"<p>If you need help:</p> <ul> <li>Check existing documentation</li> <li>Open a GitHub issue</li> <li>Contact the maintainers</li> <li>Join our discussions</li> </ul>"},{"location":"contributing/#recognition","title":"Recognition","text":"<p>Contributors are recognized in:</p> <ul> <li>GitHub contributors list</li> <li>Ontology acknowledgements</li> <li>Publication acknowledgements (when appropriate)</li> </ul>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>We follow a code of conduct that promotes:</p> <ul> <li>Respectful communication</li> <li>Inclusive environment</li> <li>Constructive feedback</li> <li>Professional behavior</li> </ul>"},{"location":"contributing/#next-steps","title":"Next Steps","text":"<p>After reading this guide:</p> <ol> <li>Check out ROBOT Templates</li> <li>Look at Build Process</li> <li>Review Managing Documentation</li> <li>Start contributing!</li> </ol> <p>Thank you for your interest in contributing to PBPKO!</p>"},{"location":"current_release/","title":"Current Release","text":""},{"location":"current_release/#pbpko-v103","title":"PBPKO v1.0.3","text":"<p>Release Date: February 4, 2025</p>"},{"location":"current_release/#whats-new","title":"What's New","text":"<ul> <li>Updated parameter definitions</li> <li>Improved ontology structure</li> <li>Enhanced documentation</li> <li>Bug fixes and improvements</li> </ul>"},{"location":"current_release/#download","title":"Download","text":"<p>OWL Format: - pbpko.owl</p> <p>OBO Format: - pbpko.obo</p> <p>JSON-LD Format: - pbpko.json</p>"},{"location":"current_release/#statistics","title":"Statistics","text":"<ul> <li>Total Terms: 700+</li> <li>Classes: 500+</li> <li>Properties: 50+</li> <li>Imported Ontologies: 5</li> </ul>"},{"location":"current_release/#browse-online","title":"Browse Online","text":"<ul> <li>OLS</li> <li>Ontobee</li> <li>BioPortal</li> </ul>"},{"location":"current_release/#previous-releases","title":"Previous Releases","text":"<ul> <li>v1.0.2 - February 4, 2025</li> <li>v1.0.1 - January 2025</li> <li>v1.0.0 - December 2024</li> </ul>"},{"location":"current_release/#release-notes","title":"Release Notes","text":"<p>For detailed release notes, see CHANGELOG.md</p>"},{"location":"current_release/#citation","title":"Citation","text":"<p>If you use PBPKO in your research, please cite:</p> <pre><code>Kumar, S., Sharma, S., Deepika, D., Kumar, V., Kruisselbrink, J., &amp; Panov, P. (2025). \nPBPK Ontology (PBPKO): A comprehensive ontology for physiologically-based pharmacokinetic modeling. \nVersion 1.0.3. https://github.com/InSilicoVida-Research-Lab/pbpko\n</code></pre>"},{"location":"design_patterns/","title":"Design Patterns","text":"<p>This page describes the design patterns and best practices used in PBPKO development.</p>"},{"location":"design_patterns/#ontological-design-patterns","title":"Ontological Design Patterns","text":""},{"location":"design_patterns/#class-hierarchy-patterns","title":"Class Hierarchy Patterns","text":"<p>Taxonomic Organization: - Use clear hierarchical relationships - Maintain logical consistency - Follow ontological principles - Ensure proper classification</p> <p>Example Pattern: <pre><code>Parameter\n\u251c\u2500\u2500 Physiological Parameter\n\u2502   \u251c\u2500\u2500 Blood Flow\n\u2502   \u251c\u2500\u2500 Volume\n\u2502   \u2514\u2500\u2500 Cardiac Output\n\u251c\u2500\u2500 Physicochemical Parameter\n\u2502   \u251c\u2500\u2500 Molecular Weight\n\u2502   \u251c\u2500\u2500 Lipophilicity\n\u2502   \u2514\u2500\u2500 Log P\n\u2514\u2500\u2500 Biochemical Parameter\n    \u251c\u2500\u2500 Enzyme Activity\n    \u251c\u2500\u2500 Michaelis Constant\n    \u2514\u2500\u2500 Clearance Rate\n</code></pre></p>"},{"location":"design_patterns/#property-patterns","title":"Property Patterns","text":"<p>Object Property Patterns: - Use domain and range restrictions - Maintain property hierarchies - Ensure logical consistency - Document property usage</p> <p>Example Pattern: <pre><code>has_parameter (super-property)\n\u251c\u2500\u2500 has_physiological_parameter\n\u251c\u2500\u2500 has_physicochemical_parameter\n\u2514\u2500\u2500 has_biochemical_parameter\n</code></pre></p>"},{"location":"design_patterns/#naming-patterns","title":"Naming Patterns","text":"<p>Class Naming: - Use descriptive, clear names - Follow consistent conventions - Avoid abbreviations - Use title case</p> <p>Property Naming: - Use verb-based names - Be specific and clear - Follow established patterns - Maintain consistency</p>"},{"location":"design_patterns/#development-patterns","title":"Development Patterns","text":""},{"location":"design_patterns/#template-patterns","title":"Template Patterns","text":"<p>Vocabulary Template Structure: <pre><code>ID  Label   Definition  Parent  Type    Editor  Reviewer1   Reviewer2\n</code></pre></p> <p>Property Template Structure: <pre><code>ID  Label   Type    Super Property  Domain  Range\n</code></pre></p>"},{"location":"design_patterns/#validation-patterns","title":"Validation Patterns","text":"<p>Multi-level Validation: 1. Template validation 2. Ontology validation 3. Logical consistency 4. Community review</p> <p>Automated Validation: - ROBOT template checking - OWL syntax validation - Reasoner consistency checking - Automated testing</p>"},{"location":"design_patterns/#quality-assurance-patterns","title":"Quality Assurance Patterns","text":""},{"location":"design_patterns/#review-patterns","title":"Review Patterns","text":"<p>Peer Review Process: 1. Self-review 2. Peer review 3. Community feedback 4. Final validation</p> <p>Quality Checklists: - Definition completeness - Relationship accuracy - Naming consistency - Documentation quality</p>"},{"location":"design_patterns/#documentation-patterns","title":"Documentation Patterns","text":"<p>Term Documentation: - Clear definitions - Appropriate synonyms - Usage examples - Relevant references</p> <p>Process Documentation: - Clear procedures - Step-by-step guides - Examples and tutorials - Troubleshooting information</p>"},{"location":"design_patterns/#integration-patterns","title":"Integration Patterns","text":""},{"location":"design_patterns/#import-patterns","title":"Import Patterns","text":"<p>Ontology Imports: - Use established ontologies - Maintain import relationships - Regular import updates - Version management</p> <p>Tool Integration: - Standard formats (OWL, OBO) - API compatibility - Plugin architecture - Community standards</p>"},{"location":"design_patterns/#community-patterns","title":"Community Patterns","text":"<p>Collaboration Patterns: - Open development - Community feedback - Regular communication - Shared responsibility</p> <p>Governance Patterns: - Clear decision-making - Community input - Transparent processes - Regular evaluation</p>"},{"location":"design_patterns/#best-practices","title":"Best Practices","text":""},{"location":"design_patterns/#ontology-development","title":"Ontology Development","text":"<p>Design Principles: - Clarity and simplicity - Logical consistency - Comprehensive coverage - Extensibility</p> <p>Development Practices: - Iterative development - Community involvement - Regular validation - Continuous improvement</p>"},{"location":"design_patterns/#community-engagement","title":"Community Engagement","text":"<p>Engagement Strategies: - Regular communication - User feedback integration - Community events - Knowledge sharing</p> <p>Support Patterns: - Comprehensive documentation - Multiple support channels - Regular updates - Community resources</p>"},{"location":"design_patterns/#anti-patterns","title":"Anti-Patterns","text":""},{"location":"design_patterns/#common-mistakes","title":"Common Mistakes","text":"<p>Ontological Anti-Patterns: - Circular dependencies - Inconsistent naming - Missing definitions - Logical inconsistencies</p> <p>Development Anti-Patterns: - Insufficient validation - Poor documentation - Lack of community input - Inconsistent processes</p>"},{"location":"design_patterns/#prevention-strategies","title":"Prevention Strategies","text":"<p>Quality Controls: - Automated validation - Peer review processes - Community feedback - Regular audits</p> <p>Process Improvements: - Clear guidelines - Training programs - Regular reviews - Continuous improvement</p>"},{"location":"design_patterns/#implementation-guidelines","title":"Implementation Guidelines","text":""},{"location":"design_patterns/#template-usage","title":"Template Usage","text":"<p>Consistent Structure: - Follow established templates - Maintain column consistency - Use proper formatting - Validate before submission</p> <p>Content Quality: - Complete information - Accurate definitions - Proper relationships - Clear documentation</p>"},{"location":"design_patterns/#validation-procedures","title":"Validation Procedures","text":"<p>Automated Validation: - Use ROBOT tools - Run consistency checks - Validate relationships - Check for errors</p> <p>Manual Validation: - Review definitions - Check relationships - Validate examples - Ensure clarity</p>"},{"location":"design_patterns/#maintenance-patterns","title":"Maintenance Patterns","text":""},{"location":"design_patterns/#regular-maintenance","title":"Regular Maintenance","text":"<p>Scheduled Tasks: - Monthly reviews - Quarterly updates - Annual audits - Continuous monitoring</p> <p>Update Procedures: - Version control - Change documentation - Community notification - Rollback procedures</p>"},{"location":"design_patterns/#quality-monitoring","title":"Quality Monitoring","text":"<p>Metrics Tracking: - Usage statistics - Error rates - Community feedback - Performance metrics</p> <p>Improvement Processes: - Regular evaluation - Community input - Process refinement - Tool updates</p>"},{"location":"design_patterns/#resources","title":"Resources","text":""},{"location":"design_patterns/#documentation","title":"Documentation","text":"<ul> <li>Contributing Guide - Development guidelines</li> <li>ROBOT Templates - Template usage</li> <li>Build Process - Technical procedures</li> <li>Quality Standards - Editor guidelines</li> </ul>"},{"location":"design_patterns/#tools","title":"Tools","text":"<ul> <li>ROBOT - Development tools</li> <li>Prot\u00e9g\u00e9 - Ontology editor</li> <li>OBO Foundry - Community standards</li> <li>OWL - Web Ontology Language</li> </ul>"},{"location":"design_patterns/#community","title":"Community","text":"<ul> <li>OBO Academy - Training resources</li> <li>Ontology Community - Community discussions</li> <li>PBPKO Community - Project community</li> <li>ROBOT Community - Tool community</li> </ul>"},{"location":"editors_documentation/","title":"Editors Documentation","text":"<p>This section provides documentation for PBPKO editors and contributors, including development workflows, quality standards, and maintenance procedures.</p>"},{"location":"editors_documentation/#editor-responsibilities","title":"Editor Responsibilities","text":""},{"location":"editors_documentation/#core-duties","title":"Core Duties","text":"<p>Term Development: - Create new terms following PBPKO standards - Maintain existing term definitions - Ensure logical consistency - Validate term relationships</p> <p>Quality Assurance: - Review term definitions for clarity - Validate ontological relationships - Check for logical consistency - Ensure compliance with standards</p> <p>Community Engagement: - Respond to user questions - Review pull requests - Provide feedback to contributors - Maintain community standards</p>"},{"location":"editors_documentation/#development-workflow","title":"Development Workflow","text":""},{"location":"editors_documentation/#term-creation-process","title":"Term Creation Process","text":"<p>1. Identify Need: - Check if term already exists - Verify necessity and scope - Define clear requirements - Plan term relationships</p> <p>2. Create Term: - Use ROBOT templates - Follow naming conventions - Provide clear definitions - Include appropriate relationships</p> <p>3. Review Process: - Self-review for completeness - Peer review by team members - Community feedback integration - Final validation</p> <p>4. Integration: - Merge into main ontology - Update documentation - Announce changes - Monitor usage</p>"},{"location":"editors_documentation/#template-usage","title":"Template Usage","text":"<p>Vocabulary Template (vocab.tsv): <pre><code>ID  Label   Definition  Parent  Type    Editor  Reviewer1   Reviewer2\npbpko:PBPKO_00099   New Term    Definition of new term  Parent Class    Class   0000-0001-8345-1349 0000-0002-9795-5967\n</code></pre></p> <p>Properties Template (properties.tsv): <pre><code>ID  Label   Type    Super Property  Domain  Range\npbpko:PBPKO_10099   has_new_property    owl:ObjectProperty  pbpko:has_parameter PBPK Model  Parameter\n</code></pre></p>"},{"location":"editors_documentation/#quality-standards","title":"Quality Standards","text":""},{"location":"editors_documentation/#term-quality","title":"Term Quality","text":"<p>Definition Requirements: - Clear and unambiguous - Scientifically accurate - Consistent with ontology style - Include context when helpful</p> <p>Naming Conventions: - Use title case for labels - Avoid abbreviations in labels - Use consistent terminology - Follow established patterns</p> <p>Relationship Standards: - Use appropriate property types - Maintain logical consistency - Document relationships clearly - Validate with reasoners</p>"},{"location":"editors_documentation/#documentation-standards","title":"Documentation Standards","text":"<p>Term Documentation: - Complete definitions - Appropriate synonyms - Clear examples - Relevant references</p> <p>Process Documentation: - Document development decisions - Record change rationale - Maintain change logs - Update user documentation</p>"},{"location":"editors_documentation/#review-process","title":"Review Process","text":""},{"location":"editors_documentation/#review-criteria","title":"Review Criteria","text":"<p>Technical Review: - Ontological soundness - Logical consistency - Relationship validity - Definition clarity</p> <p>Content Review: - Scientific accuracy - Domain relevance - Completeness - Usability</p> <p>Process Review: - Template compliance - Documentation completeness - Review process adherence - Quality standards compliance</p>"},{"location":"editors_documentation/#review-workflow","title":"Review Workflow","text":"<p>1. Initial Review: - Check template compliance - Validate basic requirements - Identify major issues - Provide initial feedback</p> <p>2. Detailed Review: - Thorough content analysis - Relationship validation - Consistency checking - Quality assessment</p> <p>3. Final Review: - Comprehensive validation - Final approval decision - Integration planning - Documentation updates</p>"},{"location":"editors_documentation/#maintenance-procedures","title":"Maintenance Procedures","text":""},{"location":"editors_documentation/#regular-maintenance","title":"Regular Maintenance","text":"<p>Monthly Tasks: - Review pending terms - Update documentation - Check for inconsistencies - Monitor community feedback</p> <p>Quarterly Tasks: - Comprehensive ontology review - Update import ontologies - Review and update standards - Plan future development</p> <p>Annual Tasks: - Complete ontology audit - Major documentation update - Community survey - Strategic planning</p>"},{"location":"editors_documentation/#issue-resolution","title":"Issue Resolution","text":"<p>Bug Reports: - Acknowledge receipt - Investigate issue - Develop solution - Implement fix - Verify resolution</p> <p>Feature Requests: - Evaluate feasibility - Assess impact - Plan implementation - Develop feature - Test and deploy</p> <p>Community Issues: - Respond promptly - Provide clear guidance - Escalate when needed - Follow up on resolution</p>"},{"location":"editors_documentation/#tools-and-resources","title":"Tools and Resources","text":""},{"location":"editors_documentation/#development-tools","title":"Development Tools","text":"<p>ROBOT: - Template processing - Ontology validation - Import management - Release generation</p> <p>Prot\u00e9g\u00e9: - Manual ontology editing - Visualization - Reasoning - Validation</p> <p>Git/GitHub: - Version control - Collaboration - Issue tracking - Documentation</p>"},{"location":"editors_documentation/#quality-assurance-tools","title":"Quality Assurance Tools","text":"<p>Validation Tools: - ROBOT validation - HermiT reasoner - Pellet reasoner - Fact++ reasoner</p> <p>Testing Tools: - Automated testing - Regression testing - Performance testing - Integration testing</p>"},{"location":"editors_documentation/#training-and-development","title":"Training and Development","text":""},{"location":"editors_documentation/#editor-training","title":"Editor Training","text":"<p>Initial Training: - Ontology basics - PBPKO structure - Development tools - Quality standards</p> <p>Ongoing Development: - Advanced techniques - New tool training - Best practices - Community engagement</p>"},{"location":"editors_documentation/#knowledge-sharing","title":"Knowledge Sharing","text":"<p>Documentation: - Maintain comprehensive guides - Update procedures - Share best practices - Document lessons learned</p> <p>Community Engagement: - Regular meetings - Knowledge sharing sessions - Training workshops - Conference presentations</p>"},{"location":"editors_documentation/#collaboration-guidelines","title":"Collaboration Guidelines","text":""},{"location":"editors_documentation/#team-communication","title":"Team Communication","text":"<p>Regular Meetings: - Weekly team meetings - Monthly planning sessions - Quarterly reviews - Annual planning</p> <p>Communication Channels: - GitHub issues and discussions - Email for formal communication - Slack for quick questions - Video calls for complex discussions</p>"},{"location":"editors_documentation/#external-collaboration","title":"External Collaboration","text":"<p>Community Engagement: - Respond to user questions - Participate in discussions - Share knowledge and expertise - Build relationships</p> <p>Academic Collaboration: - Research partnerships - Publication collaboration - Conference presentations - Workshop organization</p>"},{"location":"editors_documentation/#performance-metrics","title":"Performance Metrics","text":""},{"location":"editors_documentation/#quality-metrics","title":"Quality Metrics","text":"<p>Term Quality: - Definition completeness - Relationship accuracy - Consistency scores - User satisfaction</p> <p>Process Quality: - Review completion time - Issue resolution time - Documentation quality - Community engagement</p>"},{"location":"editors_documentation/#impact-metrics","title":"Impact Metrics","text":"<p>Usage Metrics: - Download statistics - Citation counts - User adoption - Community growth</p> <p>Development Metrics: - Term creation rate - Issue resolution rate - Documentation updates - Community contributions</p>"},{"location":"editors_documentation/#resources","title":"Resources","text":""},{"location":"editors_documentation/#documentation","title":"Documentation","text":"<ul> <li>Contributing Guide - How to contribute</li> <li>ROBOT Templates - Template usage</li> <li>Build Process - Technical details</li> <li>Quality Standards - Design patterns</li> </ul>"},{"location":"editors_documentation/#tools","title":"Tools","text":"<ul> <li>ROBOT - Ontology development</li> <li>Prot\u00e9g\u00e9 - Ontology editor</li> <li>GitHub - Version control and collaboration</li> <li>OLS - Ontology browser</li> </ul>"},{"location":"editors_documentation/#community","title":"Community","text":"<ul> <li>OBO Foundry - Ontology community</li> <li>ROBOT Community - Tool community</li> <li>PBPKO Community - Project community</li> <li>Ontology Community - General ontology community</li> </ul>"},{"location":"history/","title":"History","text":""},{"location":"history/#development-timeline","title":"Development Timeline","text":""},{"location":"history/#2024","title":"2024","text":"<p>December 2024 - Initial Release (v1.0.0) - Initial ontology framework established - Core classes and properties defined - Basic ROBOT template structure created - First documentation published</p> <p>Key Milestones: - Repository created on GitHub - Initial team assembled - First ontology terms added - Basic build process established</p>"},{"location":"history/#2025","title":"2025","text":"<p>January 2025 - Stable Release (v1.0.1) - First stable release - Core ontology structure completed - Basic parameter definitions added - Documentation improvements</p> <p>February 2025 - Enhanced Release (v1.0.2) - Parameter additions and improvements - Template system enhancements - Documentation updates - Community feedback integration</p> <p>February 2025 - Current Release (v1.0.3) - Updated parameter definitions - Improved ontology structure - Enhanced documentation - Bug fixes and improvements</p>"},{"location":"history/#project-origins","title":"Project Origins","text":""},{"location":"history/#background","title":"Background","text":"<p>The PBPKO project was initiated in response to the growing need for standardized terminology in physiologically-based pharmacokinetic modeling. The lack of consistent vocabulary across different PBPK modeling tools and research groups was identified as a barrier to:</p> <ul> <li>Model interoperability</li> <li>Reproducible research</li> <li>Knowledge sharing</li> <li>Regulatory submissions</li> </ul>"},{"location":"history/#initial-development","title":"Initial Development","text":"<p>Project Initiation: - Started by IISPV team in collaboration with WUR and JSI - Focus on creating comprehensive PBPK ontology - Integration with existing biomedical ontologies - Community-driven development approach</p> <p>Early Challenges: - Defining scope and boundaries - Establishing naming conventions - Creating consistent definitions - Building community support</p>"},{"location":"history/#key-developments","title":"Key Developments","text":""},{"location":"history/#technical-milestones","title":"Technical Milestones","text":"<p>Ontology Structure: - Hierarchical class organization - Property relationship definitions - Import management system - Validation framework</p> <p>Development Tools: - ROBOT template system - Automated build process - Continuous integration - Quality assurance procedures</p> <p>Documentation: - Comprehensive user guides - Developer documentation - API documentation - Tutorial materials</p>"},{"location":"history/#community-milestones","title":"Community Milestones","text":"<p>Adoption: - First external users - Community feedback integration - User group formation - Conference presentations</p> <p>Collaboration: - Academic partnerships - Industry collaborations - Regulatory engagement - International cooperation</p>"},{"location":"history/#evolution-of-scope","title":"Evolution of Scope","text":""},{"location":"history/#initial-scope-v100","title":"Initial Scope (v1.0.0)","text":"<ul> <li>Basic PBPK model classes</li> <li>Core parameter types</li> <li>Essential biological processes</li> <li>Simple compartment structure</li> </ul>"},{"location":"history/#expanded-scope-v101-102","title":"Expanded Scope (v1.0.1-1.0.2)","text":"<ul> <li>Comprehensive parameter definitions</li> <li>Detailed compartment specifications</li> <li>Enhanced biological processes</li> <li>Improved property relationships</li> </ul>"},{"location":"history/#current-scope-v103","title":"Current Scope (v1.0.3)","text":"<ul> <li>Full parameter coverage</li> <li>Complete compartment system</li> <li>Comprehensive process definitions</li> <li>Advanced property relationships</li> </ul>"},{"location":"history/#future-directions","title":"Future Directions","text":""},{"location":"history/#planned-developments","title":"Planned Developments","text":"<p>Short-term (2025): - Additional parameter types - Enhanced validation rules - Improved documentation - Community tools</p> <p>Medium-term (2026): - Advanced modeling features - Tool integration - Regulatory applications - International expansion</p> <p>Long-term (2027+): - AI/ML integration - Automated model generation - Real-time collaboration - Global standardization</p>"},{"location":"history/#lessons-learned","title":"Lessons Learned","text":""},{"location":"history/#technical-lessons","title":"Technical Lessons","text":"<p>Ontology Design: - Importance of clear definitions - Need for consistent naming - Value of hierarchical organization - Benefits of modular design</p> <p>Development Process: - Value of automated testing - Importance of documentation - Need for community input - Benefits of iterative development</p>"},{"location":"history/#community-lessons","title":"Community Lessons","text":"<p>Engagement: - Early community involvement crucial - Regular communication important - Feedback integration essential - Recognition motivates contributors</p> <p>Adoption: - Clear benefits must be demonstrated - Easy adoption process needed - Training materials essential - Support systems required</p>"},{"location":"history/#acknowledgments","title":"Acknowledgments","text":""},{"location":"history/#historical-contributors","title":"Historical Contributors","text":"<p>Founding Team: - Saurav Kumar (IISPV) - Project lead - Shubh Sharma (IISPV) - Technical development - Deepika Deepika (IISPV) - Content curation - Vikas Kumar (IISPV) - Ontology design - Johannes Kruisselbrink (WUR) - Domain expertise - Pan\u010de Panov (JSI) - Validation and testing</p> <p>Early Adopters: - Research groups who provided feedback - Conference attendees who asked questions - GitHub users who reported issues - Community members who suggested improvements</p>"},{"location":"history/#institutional-support","title":"Institutional Support","text":"<p>IISPV - Primary development institution WUR - Collaboration and validation JSI - Technical expertise and testing Community - Feedback and adoption</p>"},{"location":"history/#historical-resources","title":"Historical Resources","text":""},{"location":"history/#archived-materials","title":"Archived Materials","text":"<p>Early Documentation: - Initial project proposals - Early design documents - Community feedback summaries - Development meeting notes</p> <p>Version History: - Complete release history - Change logs - Migration guides - Deprecation notices</p> <p>Community Archives: - Discussion forum archives - Conference presentation materials - Workshop recordings - User group meeting notes</p> <p>For more detailed historical information, see the GitHub repository history and release notes.</p>"},{"location":"id_management/","title":"Managing Term IDs","text":"<p>Guidelines for minting, reserving, and deprecating PBPKO term identifiers. Content coming soon.</p>"},{"location":"manage_automated_tests/","title":"Manage Automated Tests","text":"<p>This page describes the automated testing framework for PBPKO, including test setup, execution, and maintenance.</p>"},{"location":"manage_automated_tests/#overview","title":"Overview","text":"<p>PBPKO uses automated testing to ensure: - Ontology quality and consistency - Template validation - Build process reliability - Documentation accuracy</p>"},{"location":"manage_automated_tests/#test-framework","title":"Test Framework","text":""},{"location":"manage_automated_tests/#robot-testing","title":"ROBOT Testing","text":"<p>ROBOT Test Commands: <pre><code># Run all tests\nrobot test --input Robot/ontologies/pbpko.owl --test all\n\n# Run specific test suite\nrobot test --input Robot/ontologies/pbpko.owl --test Robot/tests/\n\n# Generate test report\nrobot test --input Robot/ontologies/pbpko.owl --output reports/test-report.html\n</code></pre></p>"},{"location":"manage_automated_tests/#test-categories","title":"Test Categories","text":""},{"location":"manage_automated_tests/#1-ontology-validation-tests","title":"1. Ontology Validation Tests","text":"<p>Syntax Validation: <pre><code>robot validate --input Robot/ontologies/pbpko.owl\n</code></pre></p> <p>Logical Consistency: <pre><code>robot reason --input Robot/ontologies/pbpko.owl --reasoner hermit\n</code></pre></p> <p>Property Validation: <pre><code>robot validate --input Robot/ontologies/pbpko.owl --profile profile.txt\n</code></pre></p>"},{"location":"manage_automated_tests/#2-template-tests","title":"2. Template Tests","text":"<p>Template Format Validation: <pre><code>robot template --template Robot/templates/vocab.tsv --check\n</code></pre></p> <p>Template Content Validation: <pre><code>robot template --template Robot/templates/vocab.tsv --validate\n</code></pre></p> <p>Template Processing Tests: <pre><code>robot template --template Robot/templates/vocab.tsv --output test-output.owl\n</code></pre></p>"},{"location":"manage_automated_tests/#3-build-process-tests","title":"3. Build Process Tests","text":"<p>Complete Build Test: <pre><code>./scripts/test-build.sh\n</code></pre></p> <p>Individual Component Tests: <pre><code>./scripts/test-templates.sh\n./scripts/test-merge.sh\n./scripts/test-validation.sh\n</code></pre></p>"},{"location":"manage_automated_tests/#test-configuration","title":"Test Configuration","text":""},{"location":"manage_automated_tests/#test-profiles","title":"Test Profiles","text":"<p>profile.txt: <pre><code># ROBOT validation profile\n# Syntax validation\nsyntax\n\n# Logical consistency\nlogical\n\n# Property restrictions\nproperty-restrictions\n\n# Class hierarchy\nclass-hierarchy\n</code></pre></p>"},{"location":"manage_automated_tests/#test-data","title":"Test Data","text":"<p>Test Templates: - <code>Robot/tests/vocab-test.tsv</code> - Test vocabulary - <code>Robot/tests/properties-test.tsv</code> - Test properties - <code>Robot/tests/input-test.tsv</code> - Test input data</p> <p>Expected Outputs: - <code>Robot/tests/expected-output.owl</code> - Expected ontology - <code>Robot/tests/expected-report.html</code> - Expected report</p>"},{"location":"manage_automated_tests/#automated-test-execution","title":"Automated Test Execution","text":""},{"location":"manage_automated_tests/#github-actions-integration","title":"GitHub Actions Integration","text":"<p>Test Workflow: <pre><code>name: Automated Tests\non: [push, pull_request]\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Java\n        uses: actions/setup-java@v2\n        with:\n          java-version: '11'\n      - name: Download ROBOT\n        run: wget https://github.com/ontodev/robot/releases/download/v1.8.1/robot.jar\n      - name: Run tests\n        run: ./scripts/run-tests.sh\n      - name: Upload test results\n        uses: actions/upload-artifact@v2\n        with:\n          name: test-results\n          path: reports/\n</code></pre></p>"},{"location":"manage_automated_tests/#local-test-execution","title":"Local Test Execution","text":"<p>Run Tests Locally: <pre><code># Run all tests\n./scripts/run-tests.sh\n\n# Run specific test suite\n./scripts/run-tests.sh --suite ontology\n\n# Run with verbose output\n./scripts/run-tests.sh --verbose\n</code></pre></p>"},{"location":"manage_automated_tests/#test-types","title":"Test Types","text":""},{"location":"manage_automated_tests/#unit-tests","title":"Unit Tests","text":"<p>Individual Component Testing: - Template validation - Individual term testing - Property testing - Import testing</p> <p>Example Unit Test: <pre><code># Test individual template\nrobot template --template Robot/templates/vocab.tsv --check\n\n# Test individual term\nrobot validate --input Robot/ontologies/edit.owl --term PBPKO:00001\n</code></pre></p>"},{"location":"manage_automated_tests/#integration-tests","title":"Integration Tests","text":"<p>Component Integration Testing: - Template to ontology conversion - Import merging - Complete build process - Output validation</p> <p>Example Integration Test: <pre><code># Test complete build\n./scripts/build.sh\nrobot validate --input Robot/ontologies/pbpko.owl\n</code></pre></p>"},{"location":"manage_automated_tests/#regression-tests","title":"Regression Tests","text":"<p>Regression Testing: - Compare with previous versions - Check for breaking changes - Validate backward compatibility - Performance regression testing</p> <p>Example Regression Test: <pre><code># Compare with previous version\nrobot diff --left Robot/ontologies/pbpko-previous.owl \\\n           --right Robot/ontologies/pbpko-current.owl\n</code></pre></p>"},{"location":"manage_automated_tests/#test-reporting","title":"Test Reporting","text":""},{"location":"manage_automated_tests/#test-reports","title":"Test Reports","text":"<p>HTML Reports: <pre><code>robot test --input Robot/ontologies/pbpko.owl \\\n           --output reports/test-report.html\n</code></pre></p> <p>JSON Reports: <pre><code>robot test --input Robot/ontologies/pbpko.owl \\\n           --output reports/test-report.json\n</code></pre></p> <p>CSV Reports: <pre><code>robot test --input Robot/ontologies/pbpko.owl \\\n           --output reports/test-report.csv\n</code></pre></p>"},{"location":"manage_automated_tests/#test-metrics","title":"Test Metrics","text":"<p>Metrics Tracked: - Test execution time - Success/failure rates - Coverage metrics - Performance metrics</p> <p>Example Metrics: <pre><code># Generate metrics report\n./scripts/generate-metrics.sh\n</code></pre></p>"},{"location":"manage_automated_tests/#quality-assurance","title":"Quality Assurance","text":""},{"location":"manage_automated_tests/#test-coverage","title":"Test Coverage","text":"<p>Coverage Areas: - All ontology terms - All properties - All templates - All build steps</p> <p>Coverage Reporting: <pre><code># Generate coverage report\n./scripts/coverage-report.sh\n</code></pre></p>"},{"location":"manage_automated_tests/#test-quality","title":"Test Quality","text":"<p>Quality Metrics: - Test reliability - Test maintainability - Test performance - Test coverage</p> <p>Quality Checks: <pre><code># Run quality checks\n./scripts/quality-checks.sh\n</code></pre></p>"},{"location":"manage_automated_tests/#continuous-testing","title":"Continuous Testing","text":""},{"location":"manage_automated_tests/#automated-execution","title":"Automated Execution","text":"<p>Trigger Events: - Code commits - Pull requests - Scheduled runs - Manual triggers</p> <p>Execution Schedule: - On every commit - Daily scheduled runs - Weekly comprehensive tests - Monthly performance tests</p>"},{"location":"manage_automated_tests/#test-monitoring","title":"Test Monitoring","text":"<p>Monitoring Metrics: - Test execution time - Success rates - Failure patterns - Performance trends</p> <p>Alerting: - Email notifications for failures - Slack integration for team updates - GitHub issue creation for errors - Dashboard updates</p>"},{"location":"manage_automated_tests/#test-maintenance","title":"Test Maintenance","text":""},{"location":"manage_automated_tests/#regular-updates","title":"Regular Updates","text":"<p>Update Schedule: - Monthly test review - Quarterly test updates - Annual test overhaul - Continuous improvement</p>"},{"location":"manage_automated_tests/#test-documentation","title":"Test Documentation","text":"<p>Documentation Requirements: - Test descriptions - Test procedures - Expected results - Troubleshooting guides</p>"},{"location":"manage_automated_tests/#test-versioning","title":"Test Versioning","text":"<p>Version Control: - Test script versioning - Test data versioning - Test configuration versioning - Test result archiving</p>"},{"location":"manage_automated_tests/#troubleshooting","title":"Troubleshooting","text":""},{"location":"manage_automated_tests/#common-issues","title":"Common Issues","text":"<p>Test Failures: - Check ROBOT version - Verify test data - Validate test configuration - Review test logs</p> <p>Performance Issues: - Monitor resource usage - Optimize test scripts - Use parallel execution - Cache test data</p>"},{"location":"manage_automated_tests/#debug-mode","title":"Debug Mode","text":"<p>Enable Debug Output: <pre><code># Run tests with debug output\n./scripts/run-tests.sh --debug\n\n# Verbose ROBOT output\nrobot --verbose test --input Robot/ontologies/pbpko.owl\n</code></pre></p>"},{"location":"manage_automated_tests/#best-practices","title":"Best Practices","text":""},{"location":"manage_automated_tests/#test-design","title":"Test Design","text":"<p>Design Principles: - Keep tests simple and focused - Use descriptive test names - Include clear assertions - Maintain test independence</p>"},{"location":"manage_automated_tests/#test-data_1","title":"Test Data","text":"<p>Data Management: - Use minimal test data - Keep test data current - Validate test data - Document test data</p>"},{"location":"manage_automated_tests/#test-execution","title":"Test Execution","text":"<p>Execution Best Practices: - Run tests frequently - Use parallel execution - Monitor test performance - Maintain test logs</p>"},{"location":"manage_automated_tests/#resources","title":"Resources","text":""},{"location":"manage_automated_tests/#documentation","title":"Documentation","text":"<ul> <li>ROBOT Test Documentation</li> <li>GitHub Actions Testing</li> <li>Testing Best Practices</li> </ul>"},{"location":"manage_automated_tests/#tools","title":"Tools","text":"<ul> <li>ROBOT</li> <li>GitHub Actions</li> <li>TestNG</li> <li>JUnit</li> </ul>"},{"location":"manage_automated_tests/#examples","title":"Examples","text":"<ul> <li>PBPKO Test Scripts</li> <li>Test Configuration</li> <li>Test Reports</li> </ul>"},{"location":"manage_documentation/","title":"Managing the Documentation","text":"<p>This guide explains how to manage and maintain the PBPKO documentation using MkDocs.</p>"},{"location":"manage_documentation/#documentation-structure","title":"Documentation Structure","text":""},{"location":"manage_documentation/#file-organization","title":"File Organization","text":"<pre><code>docs/\n\u251c\u2500\u2500 index.md                 # Home page\n\u251c\u2500\u2500 about.md                 # About PBPKO\n\u251c\u2500\u2500 team.md                  # Team information\n\u251c\u2500\u2500 contributing.md          # Contribution guide\n\u251c\u2500\u2500 robot_templates.md      # ROBOT templates guide\n\u251c\u2500\u2500 build_process.md         # Build process\n\u251c\u2500\u2500 manage_documentation.md  # This file\n\u251c\u2500\u2500 continuous_integration.md\n\u251c\u2500\u2500 manage_automated_tests.md\n\u251c\u2500\u2500 pbpko_release.md\n\u251c\u2500\u2500 pbpko_editor_sop.md\n\u251c\u2500\u2500 onboarding.md\n\u251c\u2500\u2500 id_management.md\n\u251c\u2500\u2500 publications.md\n\u251c\u2500\u2500 related_resources.md\n\u251c\u2500\u2500 user_documentation.md\n\u251c\u2500\u2500 editors_documentation.md\n\u251c\u2500\u2500 design_patterns.md\n\u2514\u2500\u2500 pbpko_build_pipeline.md\n</code></pre>"},{"location":"manage_documentation/#mkdocs-configuration","title":"MkDocs Configuration","text":"<p>mkdocs.yml contains: - Site configuration - Navigation structure - Theme settings - Plugin configuration</p>"},{"location":"manage_documentation/#adding-new-pages","title":"Adding New Pages","text":""},{"location":"manage_documentation/#1-create-the-file","title":"1. Create the File","text":"<p>Create a new <code>.md</code> file in the <code>docs/</code> directory:</p> <pre><code>touch docs/new_page.md\n</code></pre>"},{"location":"manage_documentation/#2-add-navigation","title":"2. Add Navigation","text":"<p>Update <code>mkdocs.yml</code> to include the new page:</p> <pre><code>nav:\n  - Section Name:\n      - New Page: new_page.md\n</code></pre>"},{"location":"manage_documentation/#3-write-content","title":"3. Write Content","text":"<p>Use Markdown syntax with MkDocs extensions:</p> <p><pre><code># Page Title\n\n## Section\n\nContent here...\n\n!!! note \"Note\"\n    Important information\n\n```mermaid\ngraph TB\n    A[Start] --&gt; B[Process]\n    B --&gt; C[End]\n</code></pre> <pre><code>## Content Guidelines\n\n### Writing Style\n\n- **Clear and concise** - Avoid jargon when possible\n- **Consistent tone** - Professional but approachable\n- **Structured** - Use headings and lists effectively\n- **Examples** - Include practical examples\n\n### Markdown Features\n\n**Admonitions:**\n```markdown\n!!! note \"Note\"\n    Important information\n\n!!! warning \"Warning\"\n    Be careful\n\n!!! tip \"Tip\"\n    Helpful suggestion\n</code></pre></p> <p>Code blocks: <pre><code>```bash\nrobot template --template Robot/templates/vocab.tsv\n</code></pre> <pre><code>**Tables:**\n```markdown\n| Column 1 | Column 2 |\n|----------|----------|\n| Data 1   | Data 2   |\n</code></pre></p> <p>Links: <pre><code>[Link text](url)\n[Internal link](other_page.md)\n</code></pre></p>"},{"location":"manage_documentation/#mermaid-diagrams","title":"Mermaid Diagrams","text":""},{"location":"manage_documentation/#supported-diagram-types","title":"Supported Diagram Types","text":"<ul> <li>Flowcharts - Process flows</li> <li>Sequence diagrams - Interactions</li> <li>Class diagrams - Ontology structure</li> <li>Git graphs - Version control</li> </ul>"},{"location":"manage_documentation/#example-usage","title":"Example Usage","text":"<p><pre><code>```mermaid\ngraph TB\n    A[Start] --&gt; B{Decision}\n    B --&gt;|Yes| C[Action 1]\n    B --&gt;|No| D[Action 2]\n    C --&gt; E[End]\n    D --&gt; E\n</code></pre> <pre><code>## Local Development\n\n### Setup\n\n1. **Install MkDocs:**\n   ```bash\n   pip install mkdocs mkdocs-material\n   ```\n\n2. **Install plugins:**\n   ```bash\n   pip install pymdown-extensions\n   ```\n\n### Preview Changes\n\n**Start development server:**\n```bash\nmkdocs serve\n</code></pre></p> <p>View at: http://127.0.0.1:8000</p> <p>Auto-reload: Changes automatically refresh</p>"},{"location":"manage_documentation/#build-site","title":"Build Site","text":"<p>Build static site: <pre><code>mkdocs build\n</code></pre></p> <p>Output: <code>site/</code> directory</p>"},{"location":"manage_documentation/#deployment","title":"Deployment","text":""},{"location":"manage_documentation/#github-pages","title":"GitHub Pages","text":"<p>Deploy to GitHub Pages: <pre><code>mkdocs gh-deploy\n</code></pre></p> <p>Automatic deployment with GitHub Actions:</p> <pre><code>name: Deploy Docs\non:\n  push:\n    branches: [ main ]\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - name: Install dependencies\n        run: pip install mkdocs mkdocs-material\n      - name: Deploy\n        run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"manage_documentation/#content-management","title":"Content Management","text":""},{"location":"manage_documentation/#regular-updates","title":"Regular Updates","text":"<ul> <li>Keep information current - Update outdated content</li> <li>Add new features - Document new functionality</li> <li>Improve clarity - Refine existing content</li> <li>Fix errors - Correct mistakes and typos</li> </ul>"},{"location":"manage_documentation/#version-control","title":"Version Control","text":"<ul> <li>Commit frequently - Small, focused commits</li> <li>Use descriptive messages - Clear commit descriptions</li> <li>Review changes - Check content before merging</li> </ul>"},{"location":"manage_documentation/#collaboration","title":"Collaboration","text":"<ul> <li>Use pull requests - For documentation changes</li> <li>Request reviews - Get feedback from team</li> <li>Discuss changes - Use GitHub issues for planning</li> </ul>"},{"location":"manage_documentation/#quality-assurance","title":"Quality Assurance","text":""},{"location":"manage_documentation/#content-review","title":"Content Review","text":"<ul> <li>Accuracy - Verify technical accuracy</li> <li>Completeness - Ensure all necessary information</li> <li>Clarity - Check for clear explanations</li> <li>Consistency - Maintain style and format</li> </ul>"},{"location":"manage_documentation/#technical-checks","title":"Technical Checks","text":"<ul> <li>Link validation - Check all links work</li> <li>Image optimization - Compress images</li> <li>Mobile responsiveness - Test on mobile devices</li> <li>Accessibility - Ensure accessibility standards</li> </ul>"},{"location":"manage_documentation/#maintenance-tasks","title":"Maintenance Tasks","text":""},{"location":"manage_documentation/#monthly","title":"Monthly","text":"<ul> <li>[ ] Review and update content</li> <li>[ ] Check for broken links</li> <li>[ ] Update version information</li> <li>[ ] Review user feedback</li> </ul>"},{"location":"manage_documentation/#quarterly","title":"Quarterly","text":"<ul> <li>[ ] Major content reorganization</li> <li>[ ] Update navigation structure</li> <li>[ ] Review and update guidelines</li> <li>[ ] Performance optimization</li> </ul>"},{"location":"manage_documentation/#annually","title":"Annually","text":"<ul> <li>[ ] Complete documentation audit</li> <li>[ ] Update technology stack</li> <li>[ ] Review and update policies</li> <li>[ ] Plan major improvements</li> </ul>"},{"location":"manage_documentation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"manage_documentation/#common-issues","title":"Common Issues","text":"<p>Build errors: - Check YAML syntax in mkdocs.yml - Verify file paths - Check Markdown syntax</p> <p>Deployment issues: - Verify GitHub Pages settings - Check repository permissions - Review deployment logs</p> <p>Content issues: - Validate Markdown syntax - Check image paths - Verify link URLs</p>"},{"location":"manage_documentation/#getting-help","title":"Getting Help","text":"<ul> <li>Check MkDocs documentation</li> <li>Review GitHub issues</li> <li>Contact maintainers</li> <li>Ask community for help</li> </ul>"},{"location":"manage_documentation/#resources","title":"Resources","text":"<ul> <li>MkDocs Documentation</li> <li>Material for MkDocs</li> <li>Markdown Guide</li> <li>Mermaid Documentation</li> </ul>"},{"location":"onboarding/","title":"Onboarding a New Curator","text":"<p>Prerequisites, environment setup, and first tasks for new PBPKO curators. Content coming soon.</p>"},{"location":"pbpko_build_pipeline/","title":"PBPKO Build Pipeline","text":"<p>This page describes the complete build pipeline for PBPKO, including all steps from template processing to release generation.</p>"},{"location":"pbpko_build_pipeline/#pipeline-overview","title":"Pipeline Overview","text":"<p>The PBPKO build pipeline consists of several interconnected stages:</p> graph LR     A[Templates] --&gt; B[ROBOT Processing]     B --&gt; C[Import Management]     C --&gt; D[Ontology Merging]     D --&gt; E[Validation]     E --&gt; F[Testing]     F --&gt; G[Release Generation]     G --&gt; H[Deployment]"},{"location":"pbpko_build_pipeline/#stage-1-template-processing","title":"Stage 1: Template Processing","text":""},{"location":"pbpko_build_pipeline/#input-sources","title":"Input Sources","text":"<p>Template Files: - <code>Robot/templates/vocab.tsv</code> - Main vocabulary - <code>Robot/templates/properties.tsv</code> - Object properties - <code>Robot/templates/input.tsv</code> - Additional input</p> <p>Configuration: - Template validation rules - Column mapping definitions - Processing parameters</p>"},{"location":"pbpko_build_pipeline/#processing-steps","title":"Processing Steps","text":"<p>1. Template Validation: <pre><code>robot template --template Robot/templates/vocab.tsv --check\nrobot template --template Robot/templates/properties.tsv --check\n</code></pre></p> <p>2. Ontology Generation: <pre><code>robot template --template Robot/templates/vocab.tsv \\\n               --template Robot/templates/properties.tsv \\\n               --output Robot/ontologies/edit.owl\n</code></pre></p> <p>3. Quality Checks: - Column completeness validation - ID uniqueness checking - Reference validation - Format compliance</p>"},{"location":"pbpko_build_pipeline/#stage-2-import-management","title":"Stage 2: Import Management","text":""},{"location":"pbpko_build_pipeline/#import-sources","title":"Import Sources","text":"<p>Foundational Ontologies: - BFO (Basic Formal Ontology) - RO (Relation Ontology) - GO (Gene Ontology) - OBI (Ontology for Biomedical Investigations) - SBO (Systems Biology Ontology)</p>"},{"location":"pbpko_build_pipeline/#import-processing","title":"Import Processing","text":"<p>1. Extract Required Terms: <pre><code>robot extract --input Robot/ontologies/imported_modules.owl \\\n              --term-file Robot/extracted_terms/imported_modules/go_terms.txt \\\n              --output Robot/ontologies/go_module.owl\n</code></pre></p> <p>2. Update Import Modules: <pre><code>robot merge --input Robot/ontologies/go_module.owl \\\n           --input Robot/ontologies/iao_module.owl \\\n           --input Robot/ontologies/obcs_module.owl \\\n           --input Robot/ontologies/uberon_module.owl \\\n           --output Robot/ontologies/imported_modules.owl\n</code></pre></p> <p>3. Import Validation: - Check import completeness - Validate import relationships - Ensure consistency - Update catalog files</p>"},{"location":"pbpko_build_pipeline/#stage-3-ontology-merging","title":"Stage 3: Ontology Merging","text":""},{"location":"pbpko_build_pipeline/#merge-process","title":"Merge Process","text":"<p>1. Merge Edit with Imports: <pre><code>robot merge --input Robot/ontologies/edit.owl \\\n           --input Robot/ontologies/imported_modules.owl \\\n           --output Robot/ontologies/pbpko.owl\n</code></pre></p> <p>2. Post-Merge Processing: - Add annotations - Update metadata - Generate reports - Validate consistency</p>"},{"location":"pbpko_build_pipeline/#merge-validation","title":"Merge Validation","text":"<p>Consistency Checks: - Logical consistency - Relationship validation - Class hierarchy verification - Property restrictions</p>"},{"location":"pbpko_build_pipeline/#stage-4-validation","title":"Stage 4: Validation","text":""},{"location":"pbpko_build_pipeline/#validation-levels","title":"Validation Levels","text":"<p>1. Syntax Validation: <pre><code>robot validate --input Robot/ontologies/pbpko.owl\n</code></pre></p> <p>2. Logical Consistency: <pre><code>robot reason --input Robot/ontologies/pbpko.owl --reasoner hermit\n</code></pre></p> <p>3. Profile Validation: <pre><code>robot validate --input Robot/ontologies/pbpko.owl --profile profile.txt\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#validation-reports","title":"Validation Reports","text":"<p>Report Generation: <pre><code>robot report --input Robot/ontologies/pbpko.owl \\\n             --output reports/pbpko-report.html\n</code></pre></p> <p>Report Contents: - Validation results - Error summaries - Warning details - Recommendations</p>"},{"location":"pbpko_build_pipeline/#stage-5-testing","title":"Stage 5: Testing","text":""},{"location":"pbpko_build_pipeline/#test-categories","title":"Test Categories","text":"<p>1. Unit Tests: - Individual component testing - Template validation - Import testing - Property testing</p> <p>2. Integration Tests: - End-to-end build testing - Cross-component validation - Performance testing - Regression testing</p> <p>3. Quality Tests: - Ontology quality metrics - Coverage analysis - Consistency checking - Usability testing</p>"},{"location":"pbpko_build_pipeline/#test-execution","title":"Test Execution","text":"<p>Automated Testing: <pre><code>./scripts/run-tests.sh\n</code></pre></p> <p>Test Reporting: <pre><code>robot test --input Robot/ontologies/pbpko.owl \\\n           --output reports/test-report.html\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#stage-6-release-generation","title":"Stage 6: Release Generation","text":""},{"location":"pbpko_build_pipeline/#release-preparation","title":"Release Preparation","text":"<p>1. Version Management: - Update version numbers - Generate release notes - Update documentation - Tag repository</p> <p>2. Release File Generation: <pre><code># OWL format\nrobot convert --input Robot/ontologies/pbpko.owl \\\n              --format owl \\\n              --output releases/pbpko.owl\n\n# OBO format\nrobot convert --input Robot/ontologies/pbpko.owl \\\n              --format obo \\\n              --output releases/pbpko.obo\n\n# JSON-LD format\nrobot convert --input Robot/ontologies/pbpko.owl \\\n              --format json \\\n              --output releases/pbpko.json\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#release-validation","title":"Release Validation","text":"<p>Release Checks: - File integrity validation - Format compliance - Size optimization - Metadata verification</p>"},{"location":"pbpko_build_pipeline/#stage-7-deployment","title":"Stage 7: Deployment","text":""},{"location":"pbpko_build_pipeline/#documentation-deployment","title":"Documentation Deployment","text":"<p>MkDocs Build: <pre><code>mkdocs build\n</code></pre></p> <p>GitHub Pages Deployment: <pre><code>mkdocs gh-deploy\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#release-deployment","title":"Release Deployment","text":"<p>GitHub Release: - Upload release files - Generate release notes - Tag repository - Notify community</p>"},{"location":"pbpko_build_pipeline/#pipeline-automation","title":"Pipeline Automation","text":""},{"location":"pbpko_build_pipeline/#github-actions","title":"GitHub Actions","text":"<p>Build Workflow: <pre><code>name: Build Pipeline\non: [push, pull_request]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Java\n        uses: actions/setup-java@v2\n        with:\n          java-version: '11'\n      - name: Download ROBOT\n        run: wget https://github.com/ontodev/robot/releases/download/v1.8.1/robot.jar\n      - name: Run Pipeline\n        run: ./scripts/pipeline.sh\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#local-execution","title":"Local Execution","text":"<p>Complete Pipeline: <pre><code>./scripts/pipeline.sh\n</code></pre></p> <p>Individual Stages: <pre><code>./scripts/stage1-templates.sh\n./scripts/stage2-imports.sh\n./scripts/stage3-merge.sh\n./scripts/stage4-validate.sh\n./scripts/stage5-test.sh\n./scripts/stage6-release.sh\n./scripts/stage7-deploy.sh\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#pipeline-monitoring","title":"Pipeline Monitoring","text":""},{"location":"pbpko_build_pipeline/#metrics-tracking","title":"Metrics Tracking","text":"<p>Build Metrics: - Execution time per stage - Success/failure rates - Resource usage - Performance trends</p> <p>Quality Metrics: - Validation results - Test coverage - Error rates - User feedback</p>"},{"location":"pbpko_build_pipeline/#alerting","title":"Alerting","text":"<p>Failure Alerts: - Email notifications - Slack integration - GitHub issue creation - Status page updates</p>"},{"location":"pbpko_build_pipeline/#pipeline-maintenance","title":"Pipeline Maintenance","text":""},{"location":"pbpko_build_pipeline/#regular-updates","title":"Regular Updates","text":"<p>Dependency Updates: - ROBOT version updates - Import ontology updates - Tool version updates - Security patches</p> <p>Process Improvements: - Pipeline optimization - Error handling improvements - Performance enhancements - Feature additions</p>"},{"location":"pbpko_build_pipeline/#documentation","title":"Documentation","text":"<p>Pipeline Documentation: - Process descriptions - Configuration guides - Troubleshooting information - Best practices</p>"},{"location":"pbpko_build_pipeline/#troubleshooting","title":"Troubleshooting","text":""},{"location":"pbpko_build_pipeline/#common-issues","title":"Common Issues","text":"<p>Build Failures: - Template format errors - Import resolution issues - Validation failures - Resource constraints</p> <p>Performance Issues: - Long execution times - Memory usage problems - Network timeouts - Storage limitations</p>"},{"location":"pbpko_build_pipeline/#debug-procedures","title":"Debug Procedures","text":"<p>Debug Mode: <pre><code>./scripts/pipeline.sh --debug\n</code></pre></p> <p>Verbose Output: <pre><code>robot --verbose template --template Robot/templates/vocab.tsv\n</code></pre></p> <p>Stage Isolation: <pre><code>./scripts/stage1-templates.sh --isolate\n</code></pre></p>"},{"location":"pbpko_build_pipeline/#best-practices","title":"Best Practices","text":""},{"location":"pbpko_build_pipeline/#pipeline-design","title":"Pipeline Design","text":"<p>Design Principles: - Modular architecture - Clear stage separation - Comprehensive validation - Robust error handling</p> <p>Implementation Guidelines: - Use version control - Maintain documentation - Regular testing - Community feedback</p>"},{"location":"pbpko_build_pipeline/#quality-assurance","title":"Quality Assurance","text":"<p>Quality Measures: - Automated validation - Comprehensive testing - Regular reviews - Continuous improvement</p>"},{"location":"pbpko_build_pipeline/#resources","title":"Resources","text":""},{"location":"pbpko_build_pipeline/#documentation_1","title":"Documentation","text":"<ul> <li>Build Process - Detailed build procedures</li> <li>ROBOT Templates - Template usage</li> <li>Continuous Integration - CI/CD setup</li> <li>Quality Assurance - Testing procedures</li> </ul>"},{"location":"pbpko_build_pipeline/#tools","title":"Tools","text":"<ul> <li>ROBOT - Ontology development</li> <li>GitHub Actions - CI/CD platform</li> <li>MkDocs - Documentation generation</li> <li>OWL - Web Ontology Language</li> </ul>"},{"location":"pbpko_build_pipeline/#examples","title":"Examples","text":"<ul> <li>PBPKO Pipeline</li> <li>Build Scripts</li> <li>Configuration Files</li> <li>Release Files</li> </ul>"},{"location":"pbpko_editor_sop/","title":"Standard Operating Procedure for PBPKO Curators","text":"<p>Standard workflows, curation rules, and quality checks for PBPKO editors. Content coming soon.</p>"},{"location":"pbpko_release/","title":"PBPKO Release","text":"<p>This page documents the PBPKO release process, artifacts, and timelines. Content coming soon.</p>"},{"location":"publications/","title":"Publications","text":""},{"location":"publications/#primary-publications","title":"Primary Publications","text":""},{"location":"publications/#pbpko-development-paper","title":"PBPKO Development Paper","text":""},{"location":"related_resources/","title":"Related Resources","text":""},{"location":"related_resources/#pbpk-modeling-resources","title":"PBPK Modeling Resources","text":""},{"location":"related_resources/#software-tools","title":"Software Tools","text":"<p>Commercial Tools: - GastroPlus - Advanced compartmental absorption and transit (ACAT) model - Simcyp - Population-based PBPK modeling platform - PK-Sim - Open-source PBPK modeling software - ADMET Predictor - ADMET property prediction</p> <p>Open Source Tools: - PK-Sim - Open Systems Pharmacology Suite - Open Systems Pharmacology - Community-driven modeling platform - R packages - Various PBPK-related R packages - Python libraries - PBPK modeling libraries</p>"},{"location":"related_resources/#databases","title":"Databases","text":"<p>Physiological Data: - ICRP - International Commission on Radiological Protection - EPA - Environmental Protection Agency physiological data - Allometric scaling databases - Species-specific parameters</p> <p>Chemical Data: - ChEMBL - Chemical database of bioactive molecules - PubChem - Chemical information database - DrugBank - Drug and drug target database</p>"},{"location":"related_resources/#ontology-resources","title":"Ontology Resources","text":""},{"location":"related_resources/#related-ontologies","title":"Related Ontologies","text":"<p>Foundational Ontologies: - BFO - Basic Formal Ontology - RO - Relation Ontology - IAO - Information Artifact Ontology</p> <p>Domain Ontologies: - GO - Gene Ontology - OBI - Ontology for Biomedical Investigations - SBO - Systems Biology Ontology - ChEBI - Chemical Entities of Biological Interest</p> <p>Pharmacology Ontologies: - Drug Ontology - Drug-related terms - Pharmacokinetics Ontology - PK-specific terms - ToxML - Toxicology markup language</p>"},{"location":"related_resources/#ontology-tools","title":"Ontology Tools","text":"<p>Development Tools: - ROBOT - OBO ontology development tool - Prot\u00e9g\u00e9 - Ontology editor - OWL API - Java API for OWL - rdflib - Python RDF library</p> <p>Validation Tools: - HermiT - OWL reasoner - Pellet - OWL 2 reasoner - Fact++ - OWL reasoner - ELK - EL reasoner</p>"},{"location":"related_resources/#educational-resources","title":"Educational Resources","text":""},{"location":"related_resources/#tutorials-and-courses","title":"Tutorials and Courses","text":"<p>PBPK Modeling: - PBPK Modeling Course - Online course materials - Tutorial Series - Step-by-step guides - Video Lectures - Recorded presentations - Workshop Materials - Hands-on exercises</p> <p>Ontology Development: - OBO Academy - Comprehensive ontology tutorials - ROBOT Tutorial - Template-based development - Prot\u00e9g\u00e9 Tutorial - Ontology editing - OWL Tutorial - Web Ontology Language</p>"},{"location":"related_resources/#books-and-references","title":"Books and References","text":"<p>PBPK Modeling: - \"Physiologically Based Pharmacokinetic Modeling\" by Reddy et al. - \"PBPK Modeling and Simulation\" by Rowland et al. - \"Computational Toxicology\" by Reisfeld and Mayeno</p> <p>Ontology Development: - \"Ontology Engineering\" by G\u00f3mez-P\u00e9rez et al. - \"Semantic Web Technologies\" by Antoniou and van Harmelen - \"OWL 2 Web Ontology Language\" by W3C</p>"},{"location":"related_resources/#community-resources","title":"Community Resources","text":""},{"location":"related_resources/#forums-and-discussions","title":"Forums and Discussions","text":"<p>PBPK Community: - PBPK Modeling Forum - Discussion platform - LinkedIn Groups - Professional networking - Twitter - #PBPK hashtag discussions - Reddit - r/pharmacokinetics</p> <p>Ontology Community: - OBO Foundry - Community discussions - Prot\u00e9g\u00e9 Forums - Technical support - Stack Overflow - Programming questions - GitHub Discussions - Project-specific discussions</p>"},{"location":"related_resources/#conferences-and-events","title":"Conferences and Events","text":"<p>PBPK Conferences: - International Conference on Pharmacokinetics - PBPK Modeling Workshop - Regulatory Science Conference - Drug Development Conference</p> <p>Ontology Conferences: - OBO Foundry Workshop - International Semantic Web Conference - Bio-Ontologies Workshop - Ontology Summit</p>"},{"location":"related_resources/#regulatory-resources","title":"Regulatory Resources","text":""},{"location":"related_resources/#guidelines-and-standards","title":"Guidelines and Standards","text":"<p>FDA Guidelines: - PBPK Modeling Guidance - FDA guidance document - Model-Informed Drug Development - FDA framework - Pediatric Study Plans - PBPK applications</p> <p>EMA Guidelines: - PBPK Modeling Guideline - EMA guidance - Paediatric Investigation Plans - PBPK requirements - Scientific Guidelines - Regulatory requirements</p> <p>ICH Guidelines: - ICH M3(R2) - Nonclinical safety studies - ICH S6(R1) - Preclinical safety evaluation - ICH E14 - Clinical evaluation of QT prolongation</p>"},{"location":"related_resources/#data-standards","title":"Data Standards","text":""},{"location":"related_resources/#exchange-formats","title":"Exchange Formats","text":"<p>Model Exchange: - SBML - Systems Biology Markup Language - CellML - Mathematical model description - SED-ML - Simulation experiment description - COMBINE - Standards for systems biology</p> <p>Data Formats: - JSON-LD - Linked data format - RDF - Resource Description Framework - OWL - Web Ontology Language - OBO - Open Biomedical Ontologies format</p>"},{"location":"related_resources/#funding-and-support","title":"Funding and Support","text":""},{"location":"related_resources/#grant-opportunities","title":"Grant Opportunities","text":"<p>Research Funding: - NIH - National Institutes of Health - NSF - National Science Foundation - EU Horizon - European Union funding - Wellcome Trust - Biomedical research funding</p> <p>Open Source Support: - GitHub Sponsors - Open source funding - Open Collective - Community funding - Patreon - Creator support - Corporate Sponsors - Industry support</p>"},{"location":"related_resources/#contact-and-support","title":"Contact and Support","text":""},{"location":"related_resources/#getting-help","title":"Getting Help","text":"<p>Technical Support: - GitHub Issues - Bug reports and feature requests - Email - saurav.kumar@iispv.cat - Documentation - This site - Community Forums - User discussions</p> <p>Collaboration: - Research Partnerships - Academic collaboration - Industry Partnerships - Commercial collaboration - Training Programs - Educational partnerships - Consulting Services - Professional services</p>"},{"location":"releases/","title":"Releases","text":""},{"location":"releases/#release-history","title":"Release History","text":""},{"location":"releases/#v103-february-4-2025","title":"v1.0.3 (February 4, 2025)","text":"<p>Changes: - Updated parameter definitions - Improved ontology structure - Enhanced documentation - Bug fixes and improvements</p> <p>Download: - OWL - OBO - JSON-LD</p>"},{"location":"releases/#v102","title":"v1.0.2 (February 4, 2025)","text":"<p>Changes: - Initial parameter additions - Template improvements - Documentation updates</p> <p>Download: - OWL - OBO</p>"},{"location":"releases/#v101","title":"v1.0.1 (January 2025)","text":"<p>Changes: - First stable release - Core ontology structure - Basic parameter definitions</p> <p>Download: - OWL - OBO</p>"},{"location":"releases/#v100","title":"v1.0.0 (December 2024)","text":"<p>Changes: - Initial release - Basic ontology framework - Core classes and properties</p> <p>Download: - OWL - OBO</p>"},{"location":"releases/#release-process","title":"Release Process","text":""},{"location":"releases/#version-numbering","title":"Version Numbering","text":"<p>We follow semantic versioning: - Major (X.0.0) - Breaking changes - Minor (X.Y.0) - New features, backward compatible - Patch (X.Y.Z) - Bug fixes, minor improvements</p>"},{"location":"releases/#release-schedule","title":"Release Schedule","text":"<ul> <li>Major releases: Annually</li> <li>Minor releases: Quarterly</li> <li>Patch releases: As needed</li> </ul>"},{"location":"releases/#release-criteria","title":"Release Criteria","text":"<p>Before each release: - [ ] All tests passing - [ ] Documentation updated - [ ] Ontology validated - [ ] Community review completed</p>"},{"location":"releases/#download-formats","title":"Download Formats","text":""},{"location":"releases/#owl-web-ontology-language","title":"OWL (Web Ontology Language)","text":"<ul> <li>Primary format</li> <li>Full semantic expressivity</li> <li>Compatible with OWL tools</li> </ul>"},{"location":"releases/#obo-open-biomedical-ontologies","title":"OBO (Open Biomedical Ontologies)","text":"<ul> <li>Human-readable format</li> <li>Compatible with OBO tools</li> <li>Easier for manual inspection</li> </ul>"},{"location":"releases/#json-ld-json-for-linked-data","title":"JSON-LD (JSON for Linked Data)","text":"<ul> <li>Web-friendly format</li> <li>Compatible with web applications</li> <li>Machine-readable</li> </ul>"},{"location":"releases/#archive","title":"Archive","text":"<p>Older releases are archived but remain available: - All releases are permanently stored - Historical versions for reproducibility - Migration guides when needed</p>"},{"location":"releases/#support","title":"Support","text":"<p>For questions about releases: - Check release notes - Open GitHub issues - Contact maintainers - Review documentation</p>"},{"location":"robot_templates/","title":"ROBOT Templates","text":"<p>PBPKO uses ROBOT templates for systematic ontology development and maintenance. This page explains how to use the template system effectively.</p>"},{"location":"robot_templates/#overview","title":"Overview","text":"<p>ROBOT templates provide a structured way to manage ontology terms using TSV (Tab-Separated Values) files. This approach ensures consistency and enables automated processing.</p>"},{"location":"robot_templates/#template-files","title":"Template Files","text":""},{"location":"robot_templates/#1-vocabtsv","title":"1. vocab.tsv","text":"<p>Purpose: Main vocabulary terms and classes</p> <p>Location: <code>Robot/templates/vocab.tsv</code></p> <p>Key Columns: - <code>ID</code> - Term identifier (e.g., <code>pbpko:PBPKO_00001</code>) - <code>Label</code> - Human-readable label - <code>Definition</code> - Textual definition - <code>Parent</code> - Parent class - <code>Type</code> - OWL class type - <code>Editor</code> - Contributor ORCID - <code>Reviewer1</code> - First reviewer ORCID - <code>Reviewer2</code> - Second reviewer ORCID</p>"},{"location":"robot_templates/#2-propertiestsv","title":"2. properties.tsv","text":"<p>Purpose: Object and data properties</p> <p>Location: <code>Robot/templates/properties.tsv</code></p> <p>Key Columns: - <code>ID</code> - Property identifier - <code>Label</code> - Property label - <code>Type</code> - Property type (owl:ObjectProperty, owl:DataProperty) - <code>Super Property</code> - Parent property - <code>Domain</code> - Property domain - <code>Range</code> - Property range</p>"},{"location":"robot_templates/#3-inputtsv","title":"3. input.tsv","text":"<p>Purpose: Additional input data and configurations</p> <p>Location: <code>Robot/templates/input.tsv</code></p>"},{"location":"robot_templates/#template-usage","title":"Template Usage","text":""},{"location":"robot_templates/#adding-new-terms","title":"Adding New Terms","text":"<ol> <li>Open vocab.tsv</li> <li>Add new row with:</li> <li>Unique ID (next sequential number)</li> <li>Descriptive label</li> <li>Clear definition</li> <li>Appropriate parent class</li> <li>Editor information</li> </ol> <p>Example: <pre><code>pbpko:PBPKO_00099   New Parameter   Definition of new parameter Parameters  Class   0000-0001-8345-1349 0000-0002-9795-5967\n</code></pre></p>"},{"location":"robot_templates/#adding-properties","title":"Adding Properties","text":"<ol> <li>Open properties.tsv</li> <li>Add new row with:</li> <li>Unique property ID</li> <li>Property label</li> <li>Property type</li> <li>Domain and range if applicable</li> </ol> <p>Example: <pre><code>pbpko:PBPKO_10099   has_new_property    owl:ObjectProperty  pbpko:has_parameter PBPK Model  Parameter\n</code></pre></p>"},{"location":"robot_templates/#template-processing","title":"Template Processing","text":""},{"location":"robot_templates/#robot-commands","title":"ROBOT Commands","text":"<p>Generate ontology from templates: <pre><code>robot template --template Robot/templates/vocab.tsv \\\n               --template Robot/templates/properties.tsv \\\n               --output Robot/ontologies/edit.owl\n</code></pre></p> <p>Validate templates: <pre><code>robot template --template Robot/templates/vocab.tsv --check\n</code></pre></p> <p>Merge with imports: <pre><code>robot merge --input Robot/ontologies/edit.owl \\\n           --input Robot/ontologies/imported_modules.owl \\\n           --output Robot/ontologies/pbpko.owl\n</code></pre></p>"},{"location":"robot_templates/#best-practices","title":"Best Practices","text":""},{"location":"robot_templates/#term-creation","title":"Term Creation","text":"<ol> <li>Consistent Naming</li> <li>Use title case for labels</li> <li>Avoid abbreviations in labels</li> <li> <p>Use consistent terminology</p> </li> <li> <p>Clear Definitions</p> </li> <li>Start with capital letter</li> <li>End with period</li> <li>Be specific and unambiguous</li> <li> <p>Include context when helpful</p> </li> <li> <p>Proper Classification</p> </li> <li>Choose appropriate parent classes</li> <li>Follow ontological principles</li> <li>Maintain logical hierarchy</li> </ol>"},{"location":"robot_templates/#property-creation","title":"Property Creation","text":"<ol> <li>Meaningful Names</li> <li>Use descriptive property names</li> <li>Follow naming conventions</li> <li> <p>Avoid generic terms</p> </li> <li> <p>Proper Domains and Ranges</p> </li> <li>Specify appropriate domains</li> <li>Define clear ranges</li> <li>Ensure logical consistency</li> </ol>"},{"location":"robot_templates/#documentation","title":"Documentation","text":"<ol> <li>Complete Information</li> <li>Fill all required columns</li> <li>Provide editor information</li> <li> <p>Include reviewer assignments</p> </li> <li> <p>References</p> </li> <li>Cite relevant literature</li> <li>Provide source URLs</li> <li>Include DOI when available</li> </ol>"},{"location":"robot_templates/#template-validation","title":"Template Validation","text":""},{"location":"robot_templates/#automated-checks","title":"Automated Checks","text":"<p>ROBOT performs several validation checks:</p> <ul> <li>Syntax validation - TSV format correctness</li> <li>ID uniqueness - No duplicate IDs</li> <li>Reference validation - Valid parent classes</li> <li>Logical consistency - Ontological soundness</li> </ul>"},{"location":"robot_templates/#manual-review","title":"Manual Review","text":"<p>Before submitting:</p> <ol> <li>Check definitions - Ensure clarity and accuracy</li> <li>Verify relationships - Confirm logical connections</li> <li>Review naming - Check consistency</li> <li>Validate references - Ensure citations are correct</li> </ol>"},{"location":"robot_templates/#common-issues","title":"Common Issues","text":""},{"location":"robot_templates/#template-errors","title":"Template Errors","text":"<p>Missing required columns: - Ensure all mandatory columns are filled - Use empty cells for optional information</p> <p>Invalid IDs: - Follow ID format: <code>pbpko:PBPKO_XXXXX</code> - Use sequential numbering - Avoid gaps in numbering</p> <p>Circular references: - Check parent-child relationships - Ensure no circular dependencies</p>"},{"location":"robot_templates/#processing-errors","title":"Processing Errors","text":"<p>ROBOT template errors: - Check TSV format - Verify column headers - Ensure proper escaping</p> <p>Merge conflicts: - Resolve import conflicts - Check for duplicate terms - Validate logical consistency</p>"},{"location":"robot_templates/#advanced-usage","title":"Advanced Usage","text":""},{"location":"robot_templates/#custom-templates","title":"Custom Templates","text":"<p>You can create custom templates for specific purposes:</p> <ol> <li>Specialized vocabularies</li> <li>Domain-specific terms</li> <li>Temporary term collections</li> </ol>"},{"location":"robot_templates/#template-automation","title":"Template Automation","text":"<p>Consider automating template processing:</p> <ol> <li>CI/CD integration</li> <li>Automated validation</li> <li>Scheduled processing</li> </ol>"},{"location":"robot_templates/#getting-help","title":"Getting Help","text":"<p>For template-related issues:</p> <ol> <li>Check ROBOT documentation</li> <li>Review existing templates</li> <li>Contact maintainers</li> <li>Open GitHub issues</li> </ol>"},{"location":"robot_templates/#resources","title":"Resources","text":"<ul> <li>ROBOT Documentation</li> <li>Template Tutorial</li> <li>OBO Tutorial</li> <li>PBPKO Templates</li> </ul>"},{"location":"team/","title":"The PBPKO Team","text":""},{"location":"team/#team-structure","title":"Team Structure","text":"<p>The PBPKO team is organized across multiple institutions with clear roles and responsibilities:</p>"},{"location":"team/#core-development-team","title":"Core Development Team","text":""},{"location":"team/#iispv-institut-dinvestigacio-sanitaria-pere-virgili","title":"IISPV (Institut d'Investigaci\u00f3 Sanit\u00e0ria Pere Virgili)","text":"Name Title Email Role Vikas Kumar PBPK Expert vikas.kumar@urv.cat Ontology design and implementation Deepika Deepika PBPK Expert deepika@iispv.cat Content curation and validation Saurav Kumar Developer saurav.kumar@iispv.cat Ontology development, coordination, and maintenance Shubh Sharma Developer shubh.sharma@estudiants.urv.cat Term development and ontology modeling"},{"location":"team/#wur-wageningen-university-research","title":"WUR (Wageningen University &amp; Research)","text":"Name Title Email Role Johannes Kruisselbrink Developer/PBPK expert johannes.kruisselbrink@wur.nl Domain expertise and validation"},{"location":"team/#jsi-jozef-stefan-institute","title":"JSI (Jo\u017eef Stefan Institute)","text":"Name Title Email Role Pan\u010de Panov Semantic Expert pance.panov@ijs.si Ontology design and validation"},{"location":"team/#contributing","title":"Contributing","text":"<p>We welcome contributions from the PBPK modeling community! If you're interested in contributing to PBPKO, please:</p> <ol> <li>Check our Contributing Guidelines</li> <li>Open an issue on our GitHub repository</li> <li>Contact the maintainers directly</li> </ol>"},{"location":"team/#contact-information","title":"Contact Information","text":"<p>For general inquiries about PBPKO, please contact:</p> <p>Primary Contact: Saurav Kumar Email: saurav.kumar@iispv.cat</p> <p>GitHub Repository: https://github.com/InSilicoVida-Research-Lab/pbpko</p> <p>Issue Tracker: https://github.com/InSilicoVida-Research-Lab/pbpko/issues</p>"},{"location":"team/#acknowledgments","title":"Acknowledgments","text":"<p>We acknowledge the contributions of the broader PBPK modeling community, the OBO Foundry community, and the developers of the foundational ontologies that PBPKO imports (BFO, RO, GO, OBI, and SBO).</p>"},{"location":"user_documentation/","title":"User Documentation","text":"<p>This section provides user-focused documentation for PBPKO, including how to use the ontology, browse terms, and integrate with PBPK modeling tools.</p>"},{"location":"user_documentation/#getting-started","title":"Getting Started","text":""},{"location":"user_documentation/#what-is-pbpko","title":"What is PBPKO?","text":"<p>The PBPK Ontology (PBPKO) is a standardized vocabulary for physiologically-based pharmacokinetic modeling. It provides:</p> <ul> <li>Consistent terminology across PBPK modeling tools</li> <li>Semantic annotation capabilities for models</li> <li>Interoperability between different platforms</li> <li>Reproducible research through standardized concepts</li> </ul>"},{"location":"user_documentation/#quick-start","title":"Quick Start","text":"<ol> <li>Browse the ontology using online tools</li> <li>Download the ontology files</li> <li>Integrate with your modeling tools</li> <li>Annotate your models using PBPKO terms</li> </ol>"},{"location":"user_documentation/#browsing-pbpko","title":"Browsing PBPKO","text":""},{"location":"user_documentation/#online-browsers","title":"Online Browsers","text":"<p>OLS (Ontology Lookup Service): - PBPKO on OLS - Search and browse terms - View relationships and definitions - Export term information</p> <p>Ontobee: - PBPKO on Ontobee - Alternative browsing interface - Additional visualization options - Community annotations</p> <p>BioPortal: - PBPKO on BioPortal - Comprehensive ontology browser - Additional metadata and annotations - Integration with other ontologies</p>"},{"location":"user_documentation/#key-terms-to-explore","title":"Key Terms to Explore","text":"<p>Core Model Classes: - <code>PBPKO:00003</code> - Physiologically Based Pharmacokinetic Modeling - <code>PBPKO:00004</code> - Whole Body PBPK Model - <code>PBPKO:00005</code> - Perfusion Limited Model</p> <p>Parameter Types: - <code>PBPKO:00006</code> - Physiological Parameters - <code>PBPKO:00126</code> - Physicochemical Parameters - <code>PBPKO:00139</code> - Biochemical Parameters</p> <p>Biological Processes: - <code>PBPKO:00140</code> - Absorption - <code>PBPKO:00146</code> - Distribution - <code>PBPKO:00188</code> - Metabolism - <code>PBPKO:00322</code> - Elimination</p>"},{"location":"user_documentation/#using-pbpko","title":"Using PBPKO","text":""},{"location":"user_documentation/#model-annotation","title":"Model Annotation","text":"<p>Basic Annotation: <pre><code># Example: Annotating a PBPK model\n:my_pbpk_model a pbpko:PBPKO_00003 ;\n    rdfs:label \"My PBPK Model\" ;\n    pbpko:PBPKO_10001 :absorption_process ;\n    pbpko:PBPKO_10001 :distribution_process ;\n    pbpko:PBPKO_10001 :metabolism_process ;\n    pbpko:PBPKO_10001 :elimination_process .\n</code></pre></p> <p>Parameter Annotation: <pre><code># Example: Annotating parameters\n:liver_volume a pbpko:PBPKO_00066 ;\n    rdfs:label \"Liver Volume\" ;\n    rdfs:comment \"Volume of liver compartment\" ;\n    pbpko:PBPKO_10005 :my_pbpk_model .\n</code></pre></p>"},{"location":"user_documentation/#tool-integration","title":"Tool Integration","text":"<p>ROBOT Integration: <pre><code># Extract specific terms\nrobot extract --input pbpko.owl \\\n              --term-file terms.txt \\\n              --output extracted.owl\n</code></pre></p> <p>SPARQL Queries: <pre><code># Find all parameter classes\nPREFIX pbpko: &lt;http://purl.obolibrary.org/obo/pbpko#&gt;\nSELECT ?term ?label WHERE {\n    ?term rdfs:subClassOf pbpko:PBPKO_00002 .\n    ?term rdfs:label ?label .\n}\n</code></pre></p>"},{"location":"user_documentation/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user_documentation/#1-model-documentation","title":"1. Model Documentation","text":"<p>Use PBPKO to: - Document model components - Standardize terminology - Enable model comparison - Support reproducibility</p> <p>Example: <pre><code>:my_model a pbpko:PBPKO_00003 ;\n    pbpko:PBPKO_10002 :central_compartment ;\n    pbpko:PBPKO_10002 :liver_compartment ;\n    pbpko:PBPKO_10002 :kidney_compartment ;\n    pbpko:PBPKO_10005 :cardiac_output ;\n    pbpko:PBPKO_10005 :liver_volume .\n</code></pre></p>"},{"location":"user_documentation/#2-parameter-standardization","title":"2. Parameter Standardization","text":"<p>Use PBPKO to: - Standardize parameter names - Define parameter relationships - Enable parameter sharing - Support validation</p> <p>Example: <pre><code>:cardiac_output a pbpko:PBPKO_00013 ;\n    rdfs:label \"Cardiac Output\" ;\n    rdfs:comment \"Volume of blood pumped by heart per unit time\" ;\n    pbpko:PBPKO_10005 :my_model .\n</code></pre></p>"},{"location":"user_documentation/#3-process-annotation","title":"3. Process Annotation","text":"<p>Use PBPKO to: - Annotate biological processes - Define process relationships - Enable process comparison - Support mechanistic modeling</p> <p>Example: <pre><code>:hepatic_metabolism a pbpko:PBPKO_00188 ;\n    rdfs:label \"Hepatic Metabolism\" ;\n    rdfs:comment \"Drug metabolism in liver\" ;\n    pbpko:PBPKO_10001 :my_model .\n</code></pre></p>"},{"location":"user_documentation/#best-practices","title":"Best Practices","text":""},{"location":"user_documentation/#annotation-guidelines","title":"Annotation Guidelines","text":"<p>Consistent Labeling: - Use descriptive labels - Follow naming conventions - Include units when appropriate - Provide clear definitions</p> <p>Relationship Usage: - Use appropriate property types - Maintain logical consistency - Document relationships clearly - Validate relationships</p>"},{"location":"user_documentation/#quality-assurance","title":"Quality Assurance","text":"<p>Validation Steps: - Check term definitions - Verify relationships - Validate logical consistency - Test with reasoners</p> <p>Common Issues: - Inconsistent naming - Missing definitions - Incorrect relationships - Logical inconsistencies</p>"},{"location":"user_documentation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user_documentation/#common-questions","title":"Common Questions","text":"<p>Q: How do I find the right term? A: Use the online browsers to search for terms, or browse the hierarchy to find related concepts.</p> <p>Q: Can I add new terms? A: Yes, see the Contributing Guide for information on adding new terms.</p> <p>Q: How do I validate my annotations? A: Use ROBOT or other OWL tools to validate your annotations for consistency.</p>"},{"location":"user_documentation/#getting-help","title":"Getting Help","text":"<p>Resources: - Documentation - Comprehensive guides - GitHub Issues - Bug reports and questions - Community Discussions - User discussions</p> <p>Contact: - Email: saurav.kumar@iispv.cat - GitHub: Open an issue - Community: Join discussions</p>"},{"location":"user_documentation/#examples-and-tutorials","title":"Examples and Tutorials","text":""},{"location":"user_documentation/#tutorial-series","title":"Tutorial Series","text":"<ol> <li>Introduction to PBPKO - Basic concepts and usage</li> <li>Browsing and Searching - Finding terms and relationships</li> <li>Model Annotation - Annotating PBPK models</li> <li>Tool Integration - Using PBPKO with modeling tools</li> <li>Advanced Usage - Complex annotation scenarios</li> </ol>"},{"location":"user_documentation/#example-models","title":"Example Models","text":"<p>Simple Two-Compartment Model: - Central compartment - Peripheral compartment - Basic parameters - Simple processes</p> <p>Complex Multi-Organ Model: - Multiple organ compartments - Detailed parameters - Complex processes - Advanced relationships</p>"},{"location":"user_documentation/#resources","title":"Resources","text":""},{"location":"user_documentation/#documentation","title":"Documentation","text":"<ul> <li>PBPKO Documentation - Main documentation</li> <li>Contributing Guide - How to contribute</li> <li>ROBOT Templates - Template usage</li> <li>Build Process - Technical details</li> </ul>"},{"location":"user_documentation/#tools","title":"Tools","text":"<ul> <li>ROBOT - Ontology development</li> <li>Prot\u00e9g\u00e9 - Ontology editor</li> <li>OLS - Ontology browser</li> <li>Ontobee - Alternative browser</li> </ul>"},{"location":"user_documentation/#community","title":"Community","text":"<ul> <li>GitHub Repository</li> <li>Issue Tracker</li> <li>Discussions</li> <li>Releases - Download latest versions</li> </ul>"}]}